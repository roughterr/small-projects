-- phpMyAdmin SQL Dump
-- version 3.4.8
-- http://www.phpmyadmin.net
--
-- Host: mysql1
-- Generation Time: Dec 05, 2012 at 09:10 PM
-- Server version: 5.1.39
-- PHP Version: 5.3.6-11

SET SQL_MODE="NO_AUTO_VALUE_ON_ZERO";
SET time_zone = "+00:00";


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;

--
-- Database: `gentooer_mysite`
--

-- --------------------------------------------------------

--
-- Table structure for table `banip`
--

DROP TABLE IF EXISTS `banip`;
CREATE TABLE IF NOT EXISTS `banip` (
  `ip` varchar(15) NOT NULL,
  `time` int(11) DEFAULT NULL,
  PRIMARY KEY (`ip`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8;

-- --------------------------------------------------------

--
-- Table structure for table `cate`
--

DROP TABLE IF EXISTS `cate`;
CREATE TABLE IF NOT EXISTS `cate` (
  `name` varchar(64) DEFAULT NULL,
  `position` int(11) DEFAULT NULL,
  KEY `position` (`position`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8;

--
-- Dumping data for table `cate`
--

INSERT INTO `cate` (`name`, `position`) VALUES
('other', 6),
('linux', 5),
('python', 3),
('programming', 1),
('web', 7),
('games', 10),
('x11', 2),
('networking', 9),
('java', 8),
('oim', 11);

-- --------------------------------------------------------

--
-- Table structure for table `config`
--

DROP TABLE IF EXISTS `config`;
CREATE TABLE IF NOT EXISTS `config` (
  `parametr` varchar(16) NOT NULL,
  `znachen` varchar(128) DEFAULT NULL,
  PRIMARY KEY (`parametr`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8;

--
-- Dumping data for table `config`
--

INSERT INTO `config` (`parametr`, `znachen`) VALUES
('nazvasaitu', 'Блог одного джентушника'),
('maxlist', '8'),
('tryloginminute', '3'),
('opyssaitu', 'блог про Лінукси, Пайтони, Джави і т.п.');

-- --------------------------------------------------------

--
-- Table structure for table `posts`
--

DROP TABLE IF EXISTS `posts`;
CREATE TABLE IF NOT EXISTS `posts` (
  `time` int(11) NOT NULL,
  `text` text,
  `zagolovok` varchar(128) DEFAULT NULL,
  `cate` varchar(64) DEFAULT NULL,
  PRIMARY KEY (`time`),
  KEY `cate` (`cate`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8;

--
-- Dumping data for table `posts`
--

INSERT INTO `posts` (`time`, `text`, `zagolovok`, `cate`) VALUES
(1325531196, 'Збережу посилання<br><a href="http://www.ex.ua/view/75976">http://www.ex.ua/view/75976</a>', 'Музика із NFS: Underground 2', 'other'),
(1325531096, '<p>Це перше повідомлення на моєму новому блозі, який я зробив на власному рушії, який написаний мною на Python 3.</p><p>Тут я писатиму про Linux Gentoo, Python і все інше, що мене цікавить.</p>', 'народження блогу', 'other'),
(1325533049, '<p align="justify">Я таки знайшов безкоштовний хостинг з Python 3! Модуля MySQLdb там немає для Python 3 (для другого Пайтона — є), але його можна встановити <a href="http://forum.alwaysdata.com/viewtopic.php?id=1248">самостійно</a>.</p><p>Це французький хостинг <a href="http://alwaysdata.com">alwaysdata.com</a>.</p><p align="justify">Замість MySQLdb я встановив <a href="https://github.com/downloads/petehunt/PyMySQL/PyMySQL3-0.5.tar.gz">pymysql</a>. Встановлював його через SSH, розпакувавши в ~./cgi-bin і виконавши в каталозі з інсталятором модуля:</p><div class="code">$ PYTHONPATH=~/modules python3 setup.py install --install-lib ~/modules</div><p>Це, до речі, моє перше знайомство з SSH.</p><p>Для того, щоб можна було імпотрувати цей модуль pymysql в python скритах потрібно вказувати шлях до самостійно встановлених модулів:</p><div class="code">sys.path.append(''/home/user/modules'')</div><p align="justify">Хостинг не поганий, тільки для безкоштовного плану дають мало дискового простору. Хоча мені багато й не треба. Встановив туди самописний блог, написаний на Python3, і радію.</p>', 'Безкоштовний хостинг з Python 3', 'python'),
(1325622080, '<p>Запакувати архів в форматі 7-zip у Linux з командного рядка просто. Це можна зробити так:</p><div class="code">$ 7z a архів.7z файл1 файл2</div><p>Запакувати із паролем усі файли з поточного катаголу:</p><div class="code">$ 7z a архів.7z ./* -p{lil}</div><p>, де "lil" — пароль.</p><p>Розпакувати архів:</p><div class="code">$ cd каталог-в-який-буде-розпаковано-архів<br />$ 7z x архів.7z</div>', '7z', 'linux'),
(1325668134, '<p align="justify">Тільки-що зробив RSS для свого блогу. Впринципі нічого складного, лише одна проблема була. Якщо в посиланнях, що вони повинні бути всередині тегу &lt;link&gt;, є амперсанди (себто знаки "&"), то їх потрібно замінювати на відповідні спецсимволи: "&amp;amp;". Інакше RSS не читатиметься.</p>', 'RSS', 'other'),
(1325703614, '<p aling="justify">HAL демон, Kernel automounter і GVFS я не використовую, але автоматичне монтування і демонтування змінних носіїв хочеться, бо зручно. Тому для цього використовую udev.<br /><br />Так як у мене є перепрошита флешка, розділ якої не закінчується на межі циліндру, то довелося самому написати правило:<br /></p><p><b>/etc/udev/rules.d/10-usb-flash.rules</b></p><div class="code">KERNEL=="<span class="lapky">sd*</span>", ACTION=="<span class="lapky">add</span>", RUN+="<span class="lapky">/etc/udev/scripts/sd.sh add %k</span>"<br />KERNEL=="<span class="lapky">sd*</span>", ACTION=="<span class="lapky">remove</span>", RUN+="<span class="lapky">/etc/udev/scripts/sd.sh remove %k</span>"</div><br />Це правило запускає скрипти:<br /><p><b>/etc/udev/scripts/sd.sh</b></p><br /><div class="code"><span class="comment">#!/bin/bash<br /><br /></span>kilki=${#2}<span class="comment"> # Визначення кількості символів у імені файлу пристрою.<br /></span>if [ "<span class="lapky">$kilki</span>" = "<span class="lapky">0</span>" ]; then<br />&nbsp;&nbsp;&nbsp;&nbsp;exit<br />elif [ "<span class="lapky">$kilki</span>" = "<span class="lapky">3</span>" ]; then<br />&nbsp;&nbsp;&nbsp;&nbsp;killall -9 aplay /usr/local/share/sounds/udev/*<br />&nbsp;&nbsp;&nbsp;&nbsp;if [ "<span class="lapky">$1</span>" = "<span class="lapky">add</span>" ]; then<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;aplay /usr/local/share/sounds/udev/add.wav &amp;<br />&nbsp;&nbsp;&nbsp;&nbsp;elif [ "<span class="lapky">$1</span>" = "<span class="lapky">remove</span>" ]; then<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;aplay /usr/local/share/sounds/udev/remove.wav &amp;<br />&nbsp;&nbsp;&nbsp;&nbsp;fi<br />fi<br />kilki="<span class="lapky"></span>"<br /><br />if [ "<span class="lapky">$1</span>" = "<span class="lapky">add</span>" ]; then<br />&nbsp;&nbsp;&nbsp;&nbsp;if [ ! -d "<span class="lapky">/disks</span>" ]; then<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mkdir /disks<br />&nbsp;&nbsp;&nbsp;&nbsp;fi<br />&nbsp;&nbsp;&nbsp;&nbsp;mkdir /disks/$2<br />&nbsp;&nbsp;&nbsp;&nbsp;blkid -o udev /dev/$2 &gt; /disks/$2/blkid.sh<br />&nbsp;&nbsp;&nbsp;&nbsp;echo "<span class="lapky">echo $ID_FS_UUID</span>" &gt;&gt; /disks/$2/blkid.sh<br />&nbsp;&nbsp;&nbsp;&nbsp;uuid=`sh /disks/$2/blkid.sh`<br />&nbsp;&nbsp;&nbsp;&nbsp;rm /disks/$2/blkid.sh<br />&nbsp;&nbsp;&nbsp;&nbsp;if [ "<span class="lapky">$uuid</span>" = "<span class="lapky"></span>" ]; then<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rm -rf /disks/$2<br />&nbsp;&nbsp;&nbsp;&nbsp;else<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sh /etc/udev/scripts/sd-mont.sh mount $2<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if [ ! -f "<span class="lapky">/disks/$2/umount.sh</span>" ]; then<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo "<span class="lapky">#!/bin/bash</span>" &gt; /disks/$2/mount.sh<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo "<span class="lapky">sudo /etc/udev/scripts/sd-mont.sh mount </span>"$2 &gt;&gt; /disks/$2/mount.sh<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;chmod 755 /disks/$2/mount.sh<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fi<br />&nbsp;&nbsp;&nbsp;&nbsp;fi<br />&nbsp;&nbsp;&nbsp;&nbsp;uuid="<span class="lapky"></span>"<br />elif [ "<span class="lapky">$1</span>" = "<span class="lapky">remove</span>" ]; then<br />&nbsp;&nbsp;&nbsp;&nbsp;umount -f /dev/$2<br />&nbsp;&nbsp;&nbsp;&nbsp;rm -rf /disks/$2<br />fi</div><p><b>/etc/udev/scripts/sd-mont.sh</b></p><div class="code"><span class="comment">#!/bin/bash<br /><br /></span>pershyi=`echo $2 | cut -c 1`<br />drugyi=`echo $2 | cut -c 2`<br />if [ ! "<span class="lapky">$pershyi</span>" = "<span class="lapky">s</span>" ]||[ ! "<span class="lapky">$drugyi</span>" = "<span class="lapky">d</span>" ]; then<br />&nbsp;&nbsp;&nbsp;&nbsp;echo "<span class="lapky">Помилка: неправильно введене або взагалі не введене ім''я файлу пристрою. Має починатися на sd.</span>"<br />&nbsp;&nbsp;&nbsp;&nbsp;exit<br />fi<br />pershyi="<span class="lapky"></span>"<br />drugyi="<span class="lapky"></span>"<br /><br />kilki="<span class="lapky">${#2}</span>"<br />if [ ! "<span class="lapky">$kilki</span>" = "<span class="lapky">3</span>" ]&amp;&amp;[ ! "<span class="lapky">$kilki</span>" = "<span class="lapky">4</span>" ]; then<br />&nbsp;&nbsp;&nbsp;&nbsp;echo "<span class="lapky">Помилка: неправильна довжина імені файлу пристрою. Має бути 3 або 4 символи.</span>"<br />&nbsp;&nbsp;&nbsp;&nbsp;exit<br />fi<br />kilki="<span class="lapky"></span>"<br /><br />if [ ! -d "<span class="lapky">/disks/$2</span>" ]; then<br />&nbsp;&nbsp;&nbsp;&nbsp;echo "<span class="lapky">Неможливо виконати монтування чи демонтування цього пристрою.</span>"<br />&nbsp;&nbsp;&nbsp;&nbsp;exit<br />fi<br /><br />if [ "<span class="lapky">$1</span>" = "<span class="lapky">mount</span>" ]; then<br />&nbsp;&nbsp;&nbsp;&nbsp;blkid -o udev /dev/$2 &gt; /disks/$2/blkid.sh<br />&nbsp;&nbsp;&nbsp;&nbsp;source /disks/$2/blkid.sh<br />&nbsp;&nbsp;&nbsp;&nbsp;rm /disks/$2/blkid.sh<br />&nbsp;&nbsp;&nbsp;&nbsp;ID_FS_UUID="<span class="lapky"></span>"<br />&nbsp;&nbsp;&nbsp;&nbsp;ID_FS_UUID_ENC="<span class="lapky"></span>"<br />&nbsp;&nbsp;&nbsp;&nbsp;ID_FS_LABEL_ENC="<span class="lapky"></span>"<br />&nbsp;&nbsp;&nbsp;&nbsp;if [ "<span class="lapky">$ID_FS_LABEL</span>" = "<span class="lapky"></span>" ]; then<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;label="<span class="lapky">open</span>"<br />&nbsp;&nbsp;&nbsp;&nbsp;else<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;label=$ID_FS_LABEL<br />&nbsp;&nbsp;&nbsp;&nbsp;fi<br />&nbsp;&nbsp;&nbsp;&nbsp;ID_FS_LABEL="<span class="lapky"></span>"<br />&nbsp;&nbsp;&nbsp;&nbsp;mkdir /disks/$2/$label<br />&nbsp;&nbsp;&nbsp;&nbsp;if [ "<span class="lapky">$ID_FS_TYPE</span>" = "<span class="lapky">ntfs</span>" ]; then<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;driver="<span class="lapky">ntfs-3g</span>"<br />&nbsp;&nbsp;&nbsp;&nbsp;else<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;driver="<span class="lapky">auto</span>"<br />&nbsp;&nbsp;&nbsp;&nbsp;fi<br />&nbsp;&nbsp;&nbsp;&nbsp;ID_FS_TYPE="<span class="lapky"></span>"<br />&nbsp;&nbsp;&nbsp;&nbsp;mount /dev/$2 /disks/$2/$label -t $driver -o utf8,user,dev,flush,umask=000<br />&nbsp;&nbsp;&nbsp;&nbsp;driver="<span class="lapky"></span>"<br />&nbsp;&nbsp;&nbsp;&nbsp;if grep -qs /dev/$2 /etc/mtab; then<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo "<span class="lapky">#!/bin/bash</span>" &gt; /disks/$2/umount.sh<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo "<span class="lapky">sudo /etc/udev/scripts/sd-mont.sh umount </span>"$2 &gt;&gt; /disks/$2/umount.sh<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;chmod 755 /disks/$2/umount.sh<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rm /disks/$2/mount.sh<br />&nbsp;&nbsp;&nbsp;&nbsp;else<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo "<span class="lapky">Не вдалося змонтувати пристрій.</span>"<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rm -rf /disks/$2/$label<br />&nbsp;&nbsp;&nbsp;&nbsp;fi<br />&nbsp;&nbsp;&nbsp;&nbsp;label="<span class="lapky"></span>"<br />elif [ "<span class="lapky">$1</span>" = "<span class="lapky">umount</span>" ]; then<br />&nbsp;&nbsp;&nbsp;&nbsp;umount -f /dev/$2<br />&nbsp;&nbsp;&nbsp;&nbsp;if grep -qs /dev/$2 /etc/mtab; then<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo "<span class="lapky">Щось заважає демонтувати пристрій.</span>"<br />&nbsp;&nbsp;&nbsp;&nbsp;else<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rm -rf /disks/$2/*<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo "<span class="lapky">#!/bin/bash</span>" &gt; /disks/$2/mount.sh<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo "<span class="lapky">sudo /etc/udev/scripts/sd-mont.sh mount </span>"$2 &gt;&gt; /disks/$2/mount.sh<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;chmod 755 /disks/$2/mount.sh<br />&nbsp;&nbsp;&nbsp;&nbsp;fi<br />else<br />&nbsp;&nbsp;&nbsp;&nbsp;echo "<span class="lapky">Неправильний ввід.</span>"<br />fi</div><p align="justify">Цей новий скрипт монтує флешку і створює скрипт для демонтування флешки. Якщо виконати цей скрипт, то флешка демонтується, скрипт для демонтування видаляється і створюється скрипт для монтування. Але якщо щось заважатиме демонтуванню флешки, то скрипт для демонтування залишається, а для монтування не створюється. Це досягається за допомогою перевірки файлу /etc/mtab. Так само навпаки — якщо виконати скрипт для монтування, то він видаляється, а для демонтування створюється. І, знову ж таки, якщо не вдається змонтувати флешку, то скрипти не чіпаються.При підключенні й відключенні флешки лунають звуки add.wav і remove.wav відповідно. Вони маються знаходитися у каталозі /usr/local/share/sounds/udev/.</p><p align="justify">Скриптів двоє: sd.sh і sd-mont.sh. Перший звичайні користувачі не повинні мати права запуску із правами адміністратора, а другий — користувачам, що мають мати право монтувати/флешки, потрібно дати можливість запуску цього скрипта через sudo. Якщо хто не знає, то це налаштовується командою visudo.</p><p align="justify">Ці скрипти створюють каталоги для флешок у /disks, а буває аварійне завершення роботи Лінуксу і ці каталоги залишаються і це є не дуже добре, хоч і безпечно. Щоб цього не було варто зробити щоб під час завантаження Лінуксу цей каталог очищувався. І ще у мене правила Udev не спрацьовують під час завантаження системи — тобто якщо флешка була підключена до компа до завантаження Лінуксу, то для її автомонтування потрібно її відключити, а потім знову підключити. Я це виправив так (в мене Лінукс Дженту): написав стартовий скрипт:</p><p><b>/etc/init.d/udev-rules</b></p><div class="code"><span class="comment">#!/sbin/runscript<br /># Цей скрипт повинен виконуватися лише при старті системи.<br /><br /></span>depend() {<br />&nbsp;&nbsp;&nbsp;&nbsp;need localmount<br />}<br /><br />start() {<br />&nbsp;&nbsp;&nbsp;&nbsp;function rmdisks {<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo ''<span class="lapky">Видалення каталогу /disks...</span>''<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rm -rf /disks<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if [ -d "<span class="lapky">/disks</span>" ]; then<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;eerror "<span class="lapky">Видалити каталог /disks не вдалося.</span>"<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;exit<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fi<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br />&nbsp;&nbsp;&nbsp;&nbsp;function mkdisks {<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo ''<span class="lapky">Створення каталогу /disks...</span>''<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mkdir /disks<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if [ -d "<span class="lapky">/disks</span>" ]; then<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;eend $?<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo "<span class="lapky">Запуск правил Udev із додавання пристроїв.</span>"<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;udevadm trigger --action=add<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;eend $?<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;eerror "<span class="lapky">Створити каталог /disks не вдалося.</span>"<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;exit<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fi<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br />&nbsp;&nbsp;&nbsp;&nbsp;if [ -d "<span class="lapky">/disks</span>" ]; then<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rmdisks<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mkdisks<br />&nbsp;&nbsp;&nbsp;&nbsp;else<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mkdisks<br />&nbsp;&nbsp;&nbsp;&nbsp;fi<br />}</div><p>Все.</p>', 'Правила Udev', 'linux'),
(1325704573, 'Напишу як 1 червня 2011 року встановлював собі Gentoo.<OL><LI>Відформатував розділ, де має бути Gentoo:<div class="code"># mkfs.ext4 /dev/hdc6</div></LI><LI>Примонтував його:<div class="code"># mount /dev/hdc6 /mnt/hdc6/</div></LI><LI>Із gentoo.iteam.net.ua скачав stage3-i686-20110524.tar і portage-20110531.tar.bz2</LI><LI>Розпакував архів стадії:<div class="code"># cd /mnt/hdc6<br /># tar xvjpf /home/user/stage3-i686-20110524.tar</div></LI><LI>Розпакував дерево портежів:<div class="code"># tar xvjf /home/roma/portage-20110531.tar.bz2 -C /mnt/hdc6/usr/</div></LI><LI>Відредагував /mnt/hdc6/etc/fstab:<div class="code">/dev/hdc1       /mnt/hdc1       ext4    defaults        0 0<br />/dev/hdc2       /home           ext4    defaults        0 0<br />/dev/hdc3       /mnt/hdc3       ntfs-3g users,auto      0 0<br />/dev/hdc5       /mnt/hdc5       ntfs-3g users,auto      0 0<br />/dev/hdc6       /               ext4    defaults        0 1</div></LI><LI>Створив каталоги:<div class="code"># cd /mnt/hdc6/mnt<br /># mkdir hdc1 hdc3 hdc5</div></LI><LI>Відредагував /mnt/hdc6/etc/make.conf:<br /><div class="code">CFLAGS="-O2 -march=athlon64 -pipe"<br />CXXFLAGS="-O2 -march=athlon64 -pipe"<br />CHOST="i686-pc-linux-gnu"<br />MAKEOPTS="-j2"<br />GENTOO_MIRRORS="http://gentoo.iteam.net.ua/"</div></LI><LI>Скопіював із поточної систему в ту, що встановлюю /etc/resolv.conf:<div class="code"># cp -L /etc/resolv.conf /mnt/hdc6/etc/</div>, який має такий вміст:<div class="code">nameserver 95.158.0.1<br />nameserver 95.158.0.253</div></LI><LI>Примонтував файлові системи /proc і /dev:<div class="code"># mount -t proc none /mnt/hdc6/proc<br /># mount --rbind /dev /mnt/hdc6/dev</div></LI><LI>Увійшов в змінне середовище:<div class="code"># chroot /mnt/hdc6 /bin/bash<br /># env-update<br /># source /etc/profile<br /># export PS1="(chroot) $PS1"</div></LI><LI>Відредагував /etc/locale.gen:<div class="code"># nano /etc/locale.gen</div>наступним чином:<div class="code">en_US UTF-8<br />en_US KOI-8<br />uk_UA KOI-8<br />uk_UA UTF-8<br />uk_UA KOI8-U<br />uk_UA.UTF-8 UTF-8</div></LI><LI>Згенерував локалі:<div class="code"># locale-gen</div><LI>Налаштував часовий пояс:<div class="code"># cp /usr/share/zoneinfo/GMT /etc/localtime</div></LI><LI>Встановив вихідні коди ядра:<div class="code"># USE="symlink" emerge gentoo-sources</div><LI>Налаштував і зібрав ядро (це окрема тема). І зробив символічне посилання на ядро:<div class="code"># ln -s /usr/src/linux/arch/x86/boot/bzImage /boot/</div><LI>Модулі ядра, які повинні завантажуватись автоматично при запуску системи написав в /etc/conf.d/modules:<div class="code">modules_2_6="loop ide-cd snd-intel8x0 cdc-acm udf fuse vfat 8139too nls_cp866"</div></LI><LI>Налаштував інтернет, відредагувавши файл /etc/conf.d/net так:<div class="code">config_eth0="10.0.227.52 netmask 255.255.255.0"<br />routes_eth0="default gw 10.0.227.1"</div>і зробивши автоматичний старт інтернету при запуску:<div class="code"># cd /etc/init.d<br /># ln -s net.lo net.eth0<br /># rc-update add net.eth0 default</div><LI>Налаштував ім''я машини в файлі /etc/conf.d/hostname:<div class="code">hostname="marscity"</div></LI><LI>Встановив пароль root:<div class="code"># passwd</div><LI>Зібрав udev:<div class="code"># emerge udev</div>і додав до автозапуску:<div class="code"># rc-config add udev boot</div></LI><LI>Grub не чіпав, бо в мене був уже налаштований.</LI></OL>І все. Linux Gentoo встановлено!', 'Як я встановлював Linux Gentoo', 'linux'),
(1325704632, 'Мав намір собі встановити Fedora 15 з Gnome на комп''ютер. Хотів погратись із Qemu, бо в Gentoo в мене чомусь під час встановлення Qemu зависав комп.Вільний розділ у мене лише один був на жорсткому диску, туди і хотів встановити Fedora.Пробую ставити, а воно мені видає:<blockquote>You have not specified a swap partition. 1179 MB of memory is required to continue installation without a swap partition, but you only have 1026 MB.</blockquote>Перекладу:<blockquote>Ви не вказали розділ підкачки. 1179 Мегабайтів пам''яті необхідно для того, щоб продовжити встановлення без розділу підкачки, але у вас є лише 1026 Мегабайтів.</blockquote>Я просто в шоці.<p>Поставив собі Fedora 13 з XFCE, вона не така прожерлива.</p>P.S. Трохи пізніше (трохи погрався з USE-прапорцями, хоча я не впевнений, чи діло було у встановленні, на компі тоді були запущені ще декілька програм) мені <b>вдалося</b> встановити Qemu <b>в Gentoo</b>, так-що тепер Fedora мені не потрібна.', 'Fedora 15', 'linux'),
(1325704681, '<p>Встановили Герої меча і магії 3: Відродження Ерафії версії 1.2 на Linux і гра не запускається на весь екран? Для того, щоб це виправити потрібно зробити:</p><ol> <li>Скачати патч <a href="ftp://mirrors.dotsrc.org/lokigames/updates/heroes3/heroes3-1.3.1a-unified-x86.run">ftp://mirrors.dotsrc.org/lokigames/updates/heroes3/heroes3-1.3.1a-unified-x86.run</a> </li> <li>Розпакувати патч наступним чином:<br /><div class="code"># _POSIX2_VERSION=199209 ./heroes3-1.3.1a-unified-x86.run --keep</div> </li> <li>Скачати патч для патча <a href="http://downloads.sourceforge.net/goldenfiles/loki_patch-fix-0.1.tar.gz">http://downloads.sourceforge.net/goldenfiles/loki_patch-fix-0.1.tar.gz</a> </li> <li>Розпакувати:<div class="code"># tar xvfz loki_patch-fix-0.1.tar.gz</div> </li> <li>Пофіксити:<div class="code"># cp Loki_patch-fix/fixedpatch heroes3-1.3.1a-unified-x86/bin/Linux/x86/loki_patch</div> </li> <li>І запустити:<div class="code"># ./heroes3-1.3.1a-unified-x86/update.sh</div> </li></ol>Тепер для запуску гри на повний екран її потрібно запустити з параметром -f:<div class="code">$ heroes3 -f</div>Якщо захочеться у віконечку, то:<div class="code">$ heroes3 -w</div>', 'Пропатчити Герої 3', 'games'),
(1325704716, '<p>Gpicview — це стандартний переглядач файлів у LXDE.</p><p>Хоч і сиджу я в Xfce, але використовую gpicview для перегляду зображень. Дуже зручно, коли можна боковими кнопками миші переключатися між зображеннями. Багато переглядачів зображень це вміють, а от gpicview — ні. Захотілось мені доробити gpicview. Трохи мені підсказали і, в результаті, у файлі gpicview-0.2.1/src/main-win.c зробив невеличне доопрацювання.</p><p>Після області коду:<p><div class="code">gboolean on_button_press( GtkWidget* widget, GdkEventButton* evt, MainWin* mw )<br />{<br />&nbsp;&nbsp;&nbsp;&nbsp;if( ! GTK_WIDGET_HAS_FOCUS( widget ) )<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;gtk_widget_grab_focus( widget );<br /><br />&nbsp;&nbsp;&nbsp;&nbsp;if( evt-&gt;type == GDK_BUTTON_PRESS)<br />&nbsp;&nbsp;&nbsp;&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if( evt-&gt;button == 1 )    <span class="comment">// left button</span><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if( ! mw-&gt;pix )<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return FALSE;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mw-&gt;dragging = TRUE;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;gtk_widget_get_pointer( (GtkWidget*)mw, &amp;mw-&gt;drag_old_x ,&amp;mw-&gt;drag_old_y );<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;gdk_window_set_cursor( widget-&gt;window, mw-&gt;hand_cursor );<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><p>Додав:</p><div class="code">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else if( evt-&gt;button == 3 )   <span class="comment">// right button</span><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;show_popup_menu( mw, evt );<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else if (evt-&gt;button == 8) <span class="comment">// left side button</span><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;on_prev( NULL, mw );<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else if (evt-&gt;button == 9) <span class="comment">// right side button</span><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;on_next( NULL, mw );<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div><p>Після цього, по-ідеї, має бути:</p><div class="code">&nbsp;&nbsp;&nbsp;&nbsp;}<br />&nbsp;&nbsp;&nbsp;&nbsp;else if( evt-&gt;type == GDK_2BUTTON_PRESS &amp;&amp; evt-&gt;button == 1 )    <span class="comment">// double clicked</span><br />&nbsp;&nbsp;&nbsp;&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;on_full_screen( NULL, mw );<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br />&nbsp;&nbsp;&nbsp;&nbsp;return FALSE;<br />}</div><p>Перекомпілював програму, встановив і... переключатися на попереднє/наступне зображення можна лівою/правою боковими кнопками миші.</p><p>Надсилав цю латку розробникам, але вони відповіли:<blockquote>I do not support adding code for button 8 and 9 that almost all pointingdevices lack and whose function is not standardized.</blockquote>Ну що ж — не хочуть, то як хочуть.<br />Але я буду користуватись цим виправленням і всім користувачам gpicview, які мають багатокнопочні миші рекомендую користуватись моїм рецептом.</p>', 'Доопрацювання Gpicview 0.2.1', 'linux'),
(1325704764, '<p>Покажу на прикладі, як правильно налаштувати sudo.</p>Запускаємо від рута:<div class="code"># visudo</div>І редагуємо файл:Спочатку пишемо таке:<div class="code">root ALL=(ALL) ALL</div>Далі створюємо групи користувачів:<div class="code">User_Alias USERS=user1,user3</div>Потім робимо групи команд:<div class="code">Cmnd_Alias POWEROFF=/sbin/halt</div>І даємо привілегії:<div class="code">USERS ALL=NOPASSWD:POWEROFF</div>Зберігаємо налашування.<br /><br />І все, sudo налаштоване!<br />Тепер звичайні користувачі user1 і user3 можуть вимикати комп’ютер командою:<div class="code">$ sudo halt</div>', 'Як налаштувати sudo', 'linux'),
(1325704805, 'Конвертувати відео з формату flv у формат 3gp можна за допомогою програми ffmpeg. <p>Щоб 3gp мало звуковий кодек amr конвертувати так:</p><div class="code">$ ffmpeg -i inputfile.flv -s 176x144 -ac 1 -ar 8000 outputfile.3gp</div><p>Для звукового кодеку aac, який якісніший, але трохи важчий за amr, конвертувати так:</p><div class="code">$ ffmpeg -i inputfile.flv -s 176x144 -ac 1 -acodec aac -strict experimental outputfile.3gp</div>', 'Конвертувати flv в 3gp', 'linux'),
(1325704830, 'LibreOffice 3.3.4 документ зберігати зберігає в форматі rtf, а потім цей документ відкривати не хоче — видає помилку вводу-виводу. А в форматі doc і зберігає, і відкриває.', 'LibreOffice + rtf', 'linux'),
(1325704854, '<p>Не люблю закритих програм, але інколи треба дзвонити людям, що висять лише в Скайпі. Вихід є.<br />Можна встановити програму Linphone і зареєструватися на sipnet.ru.</p><p>Після цього запустити програму Linphone, вибрати меню Linphone -> Preferences -> Manage SIP Accounts -> Proxy accounts -> Add.<br />У "Your SIP identify" вписати "sip:ваш_логін@sipnet.ru", в "SIP Proxy address" — "sip:sipnet.ru" і натиснути "ОК".<br />Після того ще спитає пароль і можна буде користуватись.</p>Для того щоб подзвонити комусь на Skype потрібно у рядок "SIP address or phone number" вписати "логін_співрозмовника_в_скайпі@skype.sipnet.ru" і натиснути кнопку виклику (вона зелена).<p>Все.</p>', 'Подзвонити на Skype із відкритої програми', 'linux'),
(1325704885, 'Поставив собі консольний таймер <b>utimer</b> і радий. Зупиняти відлік можна клавішею "пробіл".', 'Нормальний таймер у Linux', 'linux'),
(1325704918, '<p>Напишу як користуватись консольним клієнтом FTP. Хоч і в інтернеті це неважко знайти, мені буде зручно якщо воно буде тут.</p><p>Для початку треба <b>запустити</b> його:</p><div style="color:#D8D8D8;background:black;font-family:''serif'';">$ <font color="#FF1493">ftp</font><br />ftp></div>Ввести команду для підключення до серверу:<div style="color:#D8D8D8;background:black;font-family:''serif'';">ftp> <font color="#FF1493">open example.com</font></div>І на вимогу програми ввести логін і пароль:<div style="color:#D8D8D8;background:black;font-family:''serif'';">Connected to example.com (127.0.0.1).<br />220 (vsFTPd 2.3.4)<br />Name (example.com:user):<font color="#FF1493">ftp</font><br />530 Please login with USER and PASS.<br />SSL not available<br />331 Please specify the password.<br />Password: <font color="#FF1493">ftp</font><br />230 Login successful.<br />Remote system type is UNIX.<br />Using binary mode to transfer files.</div>Пароль, ясне діло, вводиться невидимими літерами.<p>Також можна запустити ftp-клієнт, відразу вказавши йому сервер, до якого треба підключитись:<div style="color:#D8D8D8;background:black;font-family:''serif'';">$ <font color="#FF1493">ftp example.com</font><br />Connected to example.com (127.0.0.1).<br />220 (vsFTPd 2.3.4)<br />Name (example.com:user):</div><p>У більшості серверів з анонімним доступом логін і пароль - "ftp". Або адреса вашої електронної пошти чи anonymous в якості логіну.</p><p>В клієнті доступні такі команди:</p><p><b>Подивитись список файлів</b> в поточному каталозі можна за допомогою команди ls. У мене видавало помилку:<div style="color:#D8D8D8;background:black;font-family:''serif'';">ftp> <font color="#FF1493">ls</font><br />500 I won''t open a connection to 10.0.227.52 (only to 95.158.11.32)<br />ftp: bind: Address already in use</div>Щоб такого не було варто запускати ftp у пасивному режимі:<div style="color:#D8D8D8;background:black;font-family:''serif'';">$ <font color="#FF1493">ftp -p example.com</font></div><div style="color:#D8D8D8;background:black;font-family:''serif'';">ftp> <font color="#FF1493">ls</font><br />227 Entering Passive Mode (91,193,124,136,82,81).<br />150 Here comes the directory listing.<br />drwxr-xr-x    2 1030     1030      3334144 Nov 08 05:00 distfiles<br />drwxrwxr-x   14 1005     10016        4096 Nov 06 03:45 experimental<br />drwxr-xr-x   15 1005     10016        4096 Jun 11 02:45 releases<br />drwxrwxr-x    3 1005     10016        4096 Nov 08 00:58 snapshots<br />226 Directory send OK.</div></p><p><b>Змінити поточний каталог</b>:<div style="color:#D8D8D8;background:black;font-family:''serif'';">ftp> <font color="#FF1493">cd distfiles</font><br />250 Directory successfully changed.</div></p><p><b>Скачати файл</b> з серверу:<div style="color:#D8D8D8;background:black;font-family:''serif'';">ftp> <font color="#FF1493">get linux-3.1.tar.bz2</font><br />local: linux-3.1.tar.bz2 remote: linux-3.1.tar.bz2<br />227 Entering Passive Mode (91,193,124,136,81,101).<br />150 Opening BINARY mode data connection for linux-3.1.tar.bz2 (77190238 bytes).<br />226 Transfer complete.<br />77190238 bytes received in 7,38 secs (1e+04 Kbytes/sec)</div>Для того, щоб він був закачаний на комп''ютер із серверу з іншим ім''ям, варто після імені на сервері вказати бажане ім''я на комп''ютері:<div style="color:#D8D8D8;background:black;font-family:''serif'';">ftp> <font color="#FF1493">get linux-3.1.tar.bz2 linux.tar.bz2</font><br />local: linux.tar.bz2 remote: linux-3.1.tar.bz2<br />227 Entering Passive Mode (91,193,124,136,80,215).<br />...</div></p><p><b>Змінити поточний локальний каталог</b>:<div style="color:#D8D8D8;background:black;font-family:''serif'';">ftp> <font color="#FF1493">lcd downloads</font><br />Local directory now /home/user/downloads</div><p><b>Дізнатись поточний каталог на віддаленому сервері</b>:<div style="color:#D8D8D8;background:black;font-family:''serif'';">ftp> <font color="#FF1493">pwd</font><br />257 "/distfiles"</div><p><b>Скачати декілька файлів</b> з серверу:<div style="color:#D8D8D8;background:black;font-family:''serif'';">ftp> <font color="#FF1493">mget doom3*</font><br />mget doom3-cdoom.png? <font color="#FF1493">y</font><br />227 Entering Passive Mode (91,193,124,136,82,107).<br />150 Opening BINARY mode data connection for doom3-cdoom.png (5579 bytes).<br />226 Transfer complete.<br />5579 bytes received in 0,0202 secs (2,7e+02 Kbytes/sec)<br />mget doom3-linux-1.3.1.1304.x86.run? <font color="#FF1493">y</font><br />227 Entering Passive Mode (91,193,124,136,83,2).<br />150 Opening BINARY mode data connection for doom3-linux-1.3.1.1304.x86.run (21145838 bytes).<br />226 Transfer complete.<br />21145838 bytes received in 2,45 secs (8,4e+03 Kbytes/sec)<br />mget doom3-linux-1.3.1302.x86.run? <font color="#FF1493">n</font><br /></div></p><p><b>Відвантажити файл</b> на сервер:<div style="color:#D8D8D8;background:black;font-family:''serif'';">ftp> <font color="#FF1493">put file.png</font><br />local: file.png remote: file.png<br />227 Entering Passive Mode (209,190,85,253,95,142)<br />150 Accepted data connection<br />226-File successfully transferred<br />226 0.145 seconds (measured here), 37.52 Kbytes per second<br />5579 bytes sent in 6,6e-05 secs (8,3e+04 Kbytes/sec)<br /></div></p><p><b>Вимкнути підтвердження</b> для команд mget, mput і mdel:<div style="color:#D8D8D8;background:black;font-family:''serif'';">ftp> <font color="#FF1493">prompt</font><br />Interactive mode off.</div></p><p><b>Відвантажити декілька файлів</b> на сервер:<div style="color:#D8D8D8;background:black;font-family:''serif'';">ftp> <font color="#FF1493">mput file*</font><br />local: file1 remote: file1<br />227 Entering Passive Mode (209,190,85,253,227,112)<br />150 Accepted data connection<br />226 File successfully transferred<br />local: file2 remote: file2<br />227 Entering Passive Mode (209,190,85,253,150,49)<br />150 Accepted data connection<br />226 File successfully transferred</div></p><p><b>Знищити файл</b> на сервері:<div style="color:#D8D8D8;background:black;font-family:''serif'';">ftp> <font color="#FF1493">delete file.png</font><br />250 Deleted file.png</div></p><p><b>Знищити декілька файлів</b> на сервері:<div style="color:#D8D8D8;background:black;font-family:''serif'';">ftp> <font color="#FF1493">mdel f*</font><br />mdel file1? <font color="#FF1493">y</font><br />250 Deleted file1<br />mdel file2? <font color="#FF1493">y</font><br />250 Deleted file2</div></p><p><b>Створити новий каталог:</b><div style="color:#D8D8D8;background:black;font-family:''serif'';">ftp> <font color="#FF1493">mkdir newdir</font><br />257 "newdir" : The directory was successfully created</div></p><p><b>Знищити каталог</b>:<div style="color:#D8D8D8;background:black;font-family:''serif'';">ftp> <font color="#FF1493">rmdir newdir</font><br />250 The directory was successfully removed</div></p><p><b>Закрити з''єднання</b> із сервером:<div style="color:#D8D8D8;background:black;font-family:''serif'';">ftp> <font color="#FF1493">close</font><br />221 Goodbye.</div></p><p><b>Вийти</b> з програми:<div style="color:#D8D8D8;background:black;font-family:''serif'';">ftp> <font color="#FF1493">exit</font></div></p><p>Дізнатись про інші команди. <b>Вивести список доступних команд</b> можна командою ? або help:</p><div style="color:#D8D8D8;background:black;font-family:''serif'';">ftp> <font color="#FF1493">help</font><br />!  debug  mdir  sendport site<br />  dir  mget  put  size<br />account  disconnect mkdir  pwd  status<br />append  exit  mls  quit  struct<br />ascii  form  mode  quote  system<br />bell  get  modtime  recv  sunique<br />binary  glob  mput  reget  tenex<br />bye  hash  newer  rstatus  tick<br />case  help  nmap  rhelp  trace<br />cd  idle  nlist  rename  type<br />cdup  image  ntrans  reset  user<br />chmod  lcd  open  restart  umask<br />close  ls  prompt  rmdir  verbose<br />cr  macdef  passive  runique  ?<br />delete  mdelete  proxy  send</div></p><p><b>Вивести опис кожної команди</b> можна так:<div style="color:#D8D8D8;background:black;font-family:''serif'';">ftp> <font color="#FF1493">help chmod</font><br />chmod      change file permissions of remote file</div></p><p>Це все, що я хотів сказати.</p>', 'ftp', 'networking'),
(1325704948, '<p>Захотілось мені на комп''ютері зі звичайною архітектурою x86 встановити і запустити Лінукс для процесорів ARM. Це потрібно було мені для того, щоб зібрати програму для книгочиталки. Намучився я, але мені таки вдалося це! Розкажу як зробив це.</p><p>Першим ділом потрібно встановити qemu. Я його в Gentoo збирав з такими USE-прапорцями:<br />app-emulation/qemu -alsa -bluetooth QEMU_SOFTMMU_TARGETS: -* arm QEMU_USER_TARGETS: -* arm</p><p>Далі потрібно визначитися з дистрибутивом з архітектурою arm. Я взяв Debian.</p><p>Після цього є 2 варіанти: скачати інсталятор або уже готову систему. Спочатку я вибрав перший варіант, тому його не рекомендую, хоч і в мене все вийшло, але встановлення забрало дуже багато часу. Там головне пам''ятати, що інсталятор міститься у initrd і після встановлення варто замінити initrd на інший. Перейду до другого варіанту.</p><p>Треба скачати, наприклад <a href="http://people.debian.org/~aurel32/qemu/armel/">звідси</a>, 3 файли:<ul><li>vmlinuz-2.6.32-5-versatile — ядро Linux;</li><li>initrd.img-2.6.32-5-versatile — файл тимчасової файлової системи initrd;</li><li>debian_squeeze_armel_standard.qcow2 — готовий образ диску віртуального Debian.</li></ul></p><p>І запустити віртуальну машину так:<div class="code">$ qemu-system-arm -M versatilepb -kernel vmlinuz-2.6.32-5-versatile -initrd initrd.img-2.6.32-5-versatile -hda debian_squeeze_armel_desktop.qcow2 -append "root=/dev/sda1"</div>, де такі опції:<br />M — тип віртуальної машини;<br />kernel — файл ядра;<br />initrd — файл тимчасової файлової системи initrd;<br />hda — файл образу диску;<br />append — передача параметра ядру.</p><p>Після того, як запустити цю команду запуститься віртуальний Debian і з ним уже можна буде відразу працювати!</p><p>Інтернет в Debian у мене настроївся сам, тому з ним не розбирався.</p><p>Для того, щоб відвантажити з віртуального Debian`а файл використовував в ньому консольний клієнт ftp.</p><p>Якщо запускати qemu з параметром "-nographic", то закривати qemu із того терміналу, з якого він запущений, не вийде. Треба буде вбивати процес з іншого терміналу.</p><p>На кінець хочу сказати, що віртуальна ОС під qemu працює повільно (у мене не дуже потужний комп), напевно навіть трохи повільніше, ніж на самій книгочиталці, але зате натурально.</p>', 'Qemu', 'linux'),
(1325704982, 'Оновив я в своїй Linux Gentoo Xfce із 4.6 до версії 4.8. Після оновлення виникло 3 проблеми:<ol><li><p>Меню не відкривається, після натискання "Меню програм" пише:<blockquote><b>Не вдалось завантажити меню програм</b><br />File "menus/applications.menu" not found</blockquote>Скопіював /etc/xdg/menus/xfce-applications.menu в /home/user/.config/menus/ і перейменував у applications.menu і ця проблема вирішена.</p></li><li><p>На робочому столі замість ярликів запуску програм значки згорнутих програм.<br />Це виправив, перезібравши пакет xfce-base/xfdesktop із увімкненим USE-прапорцем "thunar".</p></li><p><li>USE-прапорець "dbus" для Thunar. Якщо його вимкнути, то програми із ярликів на робочому столі не запускаються, видає "Помилку запуску":<blockquote>The name org.xfce.FileManager was not provided by any .service files</blockquote>А якщо увімкнути, то Thunar тягне за собою gvfs, а мені те gfvs лишнє.<br />Я це виправив редагуванням ебілда thunar-1.2.3.ebuild. Там де область коду:<div class="code">RDEPEND="${COMMON_DEPEND}<br />&nbsp;&nbsp;&nbsp;&nbsp;x11-misc/shared-mime-info<br />&nbsp;&nbsp;&nbsp;&nbsp;dev-util/desktop-file-utils<br />&nbsp;&nbsp;&nbsp;&nbsp;dbus? ( ${GVFS_DEPEND} )<br />&nbsp;&nbsp;&nbsp;&nbsp;udev? ( ${GVFS_DEPEND}[gdu,udev] )<br />&nbsp;&nbsp;&nbsp;&nbsp;xfce_plugins_trash? ( ${GVFS_DEPEND} )"</div>видалив рядочок:<div class="code">&nbsp;&nbsp;&nbsp;&nbsp;dbus? ( ${GVFS_DEPEND} )</div>Здійснив перерахунок md5-суми файла ебілда:<div class="code"># ebuild thunar-1.2.3.ebuild manifest</div>І перезібрав Thunar.</li></ol><p>Тепер все начебто працює добре.</p></p>', 'Оновлення Xfce до версії 4.8', 'x11'),
(1325705013, '<p>Після чергового оновлення мого Gentoo, точно пам''ятаю, що оновились poppler й libpng; програма для перегляду документів Evince перестала відкривати файли в форматі pdf. Видавало помилку:<blockquote><b>Не вдається відкрити документ</b><br />Файл типу документ PDF (application/pdf) не підтримується</blockquote>Вилікувалось перезбиранням Evince. Напевно воно стало неправильно злінкованим з бібліотеками /usr/lib/libpoppler*</p>Але спочатку Evince не хотіло перезбиратись, видавало помилку:<blockquote>/usr/lib/gcc/i686-pc-linux-gnu/4.5.3/../../../../i686-pc-linux-gnu/bin/ld: cannot find -lpng14<br />collect2: ld returned 1 exit status<br />make[3]: *** [libevview.la] Error 1<br />make[2]: *** [all] Error 2<br />make[1]: *** [all-recursive] Error 1<br />make: *** [all] Error 2<br />/usr/libexec/paludis/utils/emake: emake returned error 2<br /><br />!!! ERROR in app-text/evince-2.32.0-r3::gentoo:<br />!!! In gnome2_src_compile at line 3881<br />!!! compile failure</blockquote><p>Десь прочитав, що потрібно зробити символічне посилання libpng14.so. Так і зробив:<div class="code"># ln -s libpng14.so.14 libpng14.so</div></p><p>Допомогло.</p><p>Evince змогло перезібратись і тепер читає pdf.</p><p>Варто зауважити, що якщо немає 14-ї версії libpng, а лише 15-та, то варто спробувати зробити символічне посилання libpng14.so на libpng15.so.15.5.0. Може прокатить.</p>', 'Evince', 'linux');
INSERT INTO `posts` (`time`, `text`, `zagolovok`, `cate`) VALUES
(1325705037, '<p>Для того, щоб синхронізувати час з інтернетом потрібно встановити net-misc/ntp і виконати:</p><div class="code"># ntpdate 194.186.254.22 195.2.64.5</div><p>Системний час буде виставлений по UTC (Coordinated Universal Time) — всесвітньому координованому часові.</p><p>Для того, щоб цей час зберігся після перезавантаження системи, потрібно виконати команду:</p><div class="code"># hwclock --systohc</div><p>Перевести годиник можна командою date, наприклад, якщо хочете перевести лише години і хвилини:<div class="code"># date --set 09:47<br />п''ятниця, 11 листопада 2011 09:47:00 +0000</div><p>Нагадаю, що зараз в Україні час відрізняється від UTC на 2 години.</p>', 'Синхронізувати час', 'linux'),
(1325705065, 'Напишу як тільки-що налаштував ядро Linux 3.0.6 для Gentoo.<br /><ul><li><p>Вибрав тип процесора (у мене Sempron):</p><div style="color:black;background-color:#E8E8E8;font-family: ''Courier New'';">Processor type and features&nbsp;&nbsp;&nbsp;&nbsp;---&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;Processor family</div><p>вибрав "Opteron/Athlon64/Hammer/K8".</p></li><li><p>Вимкнув підтримку всяких непотрібних мені шин:</p><div style="color:black;background-color:#E8E8E8;font-family: ''Courier New'';">Bus options (PCI etc.)  ---&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;[ ] PCI Express support<br />&nbsp;&nbsp;&nbsp;&nbsp;&lt; &gt; PCCard (PCMCIA/CardBus) support</div></li><li><p>Налаштував підтримку інтернету:</p><div style="color:black;background-color:#E8E8E8;font-family: ''Courier New'';">[*] Networking support  ---&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;Networking options  ---&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;*&gt; Unix domain sockets<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[*] TCP/IP networking<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;*&gt;   Large Receive Offload (ipv4/tcp) (NEW)<br />&nbsp;&nbsp;&nbsp;&nbsp;&lt;M&gt;   Bluetooth subsystem support  ---&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[*]   L2CAP protocol support<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;M&gt;   RFCOMM protocol support<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[*]&nbsp;&nbsp;&nbsp;&nbsp; RFCOMM TTY support<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Bluetooth device drivers  ---&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;M&gt; HCI USB driver</div><p>Все інше в розділі "Networking support" вимкнув.</p></li><li><p>Для можливості монтування віртуальних образів лазерних дисків увімкнув:</p><div style="color:black;background-color:#E8E8E8;font-family: ''Courier New'';">Device Drivers  ---&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;[*] Block devices  ---><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;M&gt   Loopback device support</div></li><li><p>Налаштував підтримку моїх ATA жорсткого диску і дисководу:</p><div style="color:black;background-color:#E8E8E8;font-family: ''Courier New'';">Device Drivers  ---&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&lt;*&gt; ATA/ATAPI/MFM/RLL support (DEPRECATED)  ---&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;M&gt;   Include IDE/ATAPI CDROM support<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;*&gt;   AMD and nVidia IDE support</div></li><li><p>Вимкнув підтримку всяких непотрібних мені пристроїв:</p><div style="color:black;background-color:#E8E8E8;font-family: ''Courier New'';">Device Drivers  ---&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&lt; &gt; Serial ATA and Parallel ATA drivers<br />&nbsp;&nbsp;&nbsp;&nbsp;[ ] Multiple devices driver support (RAID and LVM)  ---&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;[ ] Macintosh device drivers  ---&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;Input device support  ---&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[ ]   Joysticks/Gamepads<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[ ]   Tablets<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[ ]   Touchscreens<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[ ]   Miscellaneous devices<br />&nbsp;&nbsp;&nbsp;&nbsp;[ ] Watchdog Timer Support<br />&nbsp;&nbsp;&nbsp;&nbsp;[ ] Multifunction device drivers<br />&nbsp;&nbsp;&nbsp;&nbsp;[ ] HID Devices<br />&nbsp;&nbsp;&nbsp;&nbsp;[ ] EDAC (Error Detection And Correction) reporting<br />&nbsp;&nbsp;&nbsp;&nbsp;[ ] LED Support<br />&nbsp;&nbsp;&nbsp;&nbsp;[ ] X86 Platform Specific Device Drivers</div></li><li><p>Вибрав драйвер для свого мережевого адаптера (у мене мережева карта Canyon CN-D30TXL):</p><div style="color:black;background-color:#E8E8E8;font-family: ''Courier New'';">Device Drivers  ---&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;[*] Network device support  ---&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[*]   Ethernet (10 or 100Mbit)  ---&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[*]   EISA, VLB, PCI and on board controllers<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;*&gt;   RealTek RTL-8129/8130/8139 PCI Fast Ethernet Adapter support</div><p>Все інше в розділі "Network device support" виключив.</p></li><li><p>В розділі "Graphics support" виключив все, що можна було виключити, так як для своєї відеокарти GeForce застосовую пропрієтарні драйвери nVidia.</p></li><li><p>Вибрав драйвер для звукової карти (у мене nVidia nForce3 250Gb AC''97):</p><div style="color:black;background-color:#E8E8E8;font-family: ''Courier New'';">&nbsp;&nbsp;&nbsp;&nbsp;&lt;*&gt; Sound card support  ---&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;*&gt;   Advanced Linux Sound Architecture  ---&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[ ]   Support old ALSA API<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[ ]   Generic sound devices<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[*]   PCI sound devices  ---&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt; &gt;   Intel HD Audio<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;M&gt;   Intel/SiS/nVidia/AMD/ALi AC97 Controller<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;M&gt;   Intel/SiS/nVidia/AMD MC97 Modem<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[ ]   USB sound devices  ---&gt;</div></li><li><p>Налаштував підтримку USB:</p><div style="color:black;background-color:#E8E8E8;font-family: ''Courier New'';">&nbsp;&nbsp;&nbsp;&nbsp;[*] USB support  ---&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt; &gt;   USB Monitor<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;M&gt;   USB Modem (CDC ACM) support<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;M&gt;   USB Printer support</div></li><li><p>Налаштував підтримку файлових систем:</p><div style="color:black;background-color:#E8E8E8;font-family: ''Courier New'';">File systems  ---&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&lt;&gt;Ext3 journalling file system support<br />&nbsp;&nbsp;&nbsp;&nbsp;&lt;*&gt;The Extended 4 (ext4) filesystem<br />&nbsp;&nbsp;&nbsp;&nbsp;&lt;M&gt;FUSE (Filesystem in Userspace) support<br />&nbsp;&nbsp;&nbsp;&nbsp;CD-ROM/DVD Filesystems  ---&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;M&gt;UDF file system support<br />&nbsp;&nbsp;&nbsp;&nbsp;DOS/FAT/NT Filesystems  ---><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;M&gt;VFAT (Windows-95) fs support<br />&nbsp;&nbsp;&nbsp;&nbsp;[ ] Miscellaneous filesystems<br />&nbsp;&nbsp;&nbsp;&nbsp;[ ] Network File Systems<br />&nbsp;&nbsp;&nbsp;&nbsp;Partition Types  ---&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[ ] Advanced partition selection<br />&nbsp;&nbsp;&nbsp;&nbsp;-*- Native language support  ---&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;*&gt;Codepage 437 (United States, Canada)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;M&gt;   Codepage 866 (Cyrillic/Russian)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;*&gt;NLS KOI8-U/RU (Ukrainian, Belarusian)<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;*&gt;NLS UTF-8</div></li></ul><p>Все інше залишив незмінним, тобто по дефолту.</p><p>У файл /etc/conf.d/modules додав рядок:</p><div class="code">modules_3_0="loop ide-cd snd-intel8x0 cdc-acm udf fuse vfat 8139too nls-cp866 usblp"</div><p>для того, щоб деякі модулі вантажились автоматично при запуску системи.</p><p>Зібрав ядро, перевірив і... працює! Я досягнув повідомлення:</p><div class="code">$ uname -sr<br />Linux 3.0.6-gentoo</div><p>Тобто, успіх!</p>', 'Як я збирав ядро Linux 3.0.6', 'linux'),
(1325705101, 'Після оновлення ядра Linux з версії 2.6.38 до 3.0.6 не хотіли встановлюватися пакетним менеджером paludis пропрієтарні драйвери nVidia і перестав запускатися емулятор терміналу "Terminal" в Xfce. Видавав помилку:<blockquote><b>Помилка виконання дочірнього процес.</b><br />getpt failed: No such file or directory.</blockquote><p>Я розібрався в чому діло, воно у pts.</p><p>Ручне монтування допомагає:</p><div class="code"># mount /dev/pts</div><p>, але до перезавантаження системи.</p>А от додавання відповідного рядочку в /etc/fstab не допомагає.</p><p>Я помітив, що pts монтується скриптом при автозапуску /etc/init.d/devfs, але pts напевно треба ще монтувати. Відразу після цього монтування (тобто в тому самому скрипті) повторне монтування не спрацьовує, тому створив стартовий скрипт mount-pts, який запускається трошки пізніше:</p><div class="code">#!/sbin/runscript<br /><br />depend() {<br />&nbsp;&nbsp;&nbsp;&nbsp;need devfs<br />&nbsp;&nbsp;&nbsp;&nbsp;after localmount<br />}<br /><br />start()<br />{<br />&nbsp;&nbsp;&nbsp;&nbsp;ebegin "Повторне монтування /dev/pts"<br />&nbsp;&nbsp;&nbsp;&nbsp;mount /dev/pts<br />&nbsp;&nbsp;&nbsp;&nbsp;eend $?<br />}</div><p>Дав йому право запуску:</p><div class="code"># chmod +x /etc/init.d/mount-pts</div><p>І додав до списку автозавантаження:</p><div class="code"># rc-config add mount-pts boot</div><p>Тепер все працює нормально.</p>', 'getpt failed', 'linux'),
(1325705146, '<p>Тільки-що поставив собі mod_perl для apache2.</p><p>/etc/apache2/modules.d/75_mod_perl.conf налаштував наступним чином:</p><div class="code">&lt;IfDefine PERL&gt;<br /><br />LoadModule perl_module modules/mod_perl.so<br /><br />&lt;Files *.pl&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;SetHandler perl-script<br />&nbsp;&nbsp;&nbsp;&nbsp;PerlResponseHandler ModPerl::PerlRun<br />&nbsp;&nbsp;&nbsp;&nbsp;Options -Indexes ExecCGI<br />&nbsp;&nbsp;&nbsp;&nbsp;PerlSendHeader On<br />&nbsp;&nbsp;&nbsp;&nbsp;Order allow,deny<br />&nbsp;&nbsp;&nbsp;&nbsp;Allow from all<br />&lt;/Files&gt;</div><p>Для тестування створив скрипт test.pl, що виводить IP-адресу користувача і кинув у /var/www/localhost/htdocs:</p><div class="code">#!/usr/bin/perl<br />print "Content-type: text/html";<br />print "&lt;html&gt;&lt;body&gt;Your IP is:&lt;br /&gt;";<br />print $ENV{ REMOTE_ADDR };<br />print "&lt;/body&gt;&lt;/html&gt;";</div><p>Перевірив, працює.</p><p>Хочу помітити, що при виводі html-сторінок рядок:</p><div class="code">print "Content-type: text/html";</div><p>обов''язковий.</p>', 'Perl', 'programming'),
(1325705235, '<p align="justify">Так як у blogger при операції експорту-імпорту стираються пробіли на початку рядків, доводиться на початку кожного рядку заміняти кожен пробіл, якщо він потрібен, на "&amp;nbsp;", щоб потім все було чітко. Вручну це робити довго, особливо коли викладую на блог великі об''єми коду.</p><p align="justify">Тому я написав на perl програмку, яка в тексті переноси рядків замінює на тег "&lt;br /&gt;", пробіли на початку рядку — на спеціальний символ пробілу в html "&amp;nbsp;", горизонтальну табуляцію — на чотири спеціальний символи пробілу в html, а знаки менше і більше — на відповідні позначення в html, щоб вони не утворювали тегів.</p><p align="justify">Ця програмка мені потрібна, в першу чергу, для обробки коду, щоб його можна було викласти на свій блог, але й може згодитися для тексту, який ліньки розбивати на абзаци за допомогою тегу &lt;p&gt;.</p><p align="justify">Для того, щоб скормити текст програмі, потрібно помістити його в файл in.txt, який має знаходитись в одному каталозі з цією програмою і просто її запустити. "Переварений" текст знаходитиметься в out.txt. Якщо файл out.txt уже існує, то програма не замінюватиме його, а просто видасть помилку.</p><p>Власне, сама програма:</p><div class="code">#!/usr/bin/perl<br /># Програма для обробки коду для вставлення його в html<br />if (-e "in.txt") {# Якщо файл in.txt існує<br />&nbsp;&nbsp;&nbsp;&nbsp;if (-e "out.txt")# Перевірка існування файлу out.txt<br />&nbsp;&nbsp;&nbsp;&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;print "Файл out.txt існує. Зупинка.\n";<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;exit;# Якщо вихідний файл out.txt існує, то завершення роботи скрипта<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br />}<br />else# Інакше<br />{<br />&nbsp;&nbsp;&nbsp;&nbsp;print "Файл in.txt не існує. Зупинка.\n";<br />&nbsp;&nbsp;&nbsp;&nbsp;exit;# Якщо вхідного файлу in.txt немає, то то завершення роботи скрипта<br />}<br /><br />open(IN,"&lt;in.txt");# Зчитуємо вхідний файл<br />open(OUT,"&gt;out.txt");# Зчитуємо вихідний файл<br /><br />sub nepochatok# Підпрограма для обробки символів у рядку якщо вони не на початку.<br />{<br />&nbsp;&nbsp;&nbsp;&nbsp;if (@array[$kil] =~ "&lt;")# Якщо знак "менше", який означає в html початок тегу, то<br />&nbsp;&nbsp;&nbsp;&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$ryadok = $ryadok."&lt;";# він заміняється на спец.символ.<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br />&nbsp;&nbsp;&nbsp;&nbsp;elsif (@array[$kil] =~ "&gt;")# Якщо знак "більше", який означає в html кінець тегу, то<br />&nbsp;&nbsp;&nbsp;&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$ryadok = $ryadok."&gt;";# він, знову ж таки, заміняється на йому відповідний спец.символ.<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br />&nbsp;&nbsp;&nbsp;&nbsp;elsif (@array[$kil] =~ "/(	)/")# Якщо знак табуляції, то<br />&nbsp;&nbsp;&nbsp;&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$ryadok = $ryadok."&gt;&gt;&gt;&gt;";# він заміняється на чотири пробіли.<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br />&nbsp;&nbsp;&nbsp;&nbsp;else# Інакше символ залишається таким, яким і був.<br />&nbsp;&nbsp;&nbsp;&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$ryadok = $ryadok.@array[$kil];# Символ залишається незмінним, яким би він не був<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br />}<br /><br />while(&lt;IN&gt;)# Порядково обробляємо вхідний файл.<br />{<br />&nbsp;&nbsp;&nbsp;&nbsp;chomp; # Забираємо символ переносу рядку<br />&nbsp;&nbsp;&nbsp;&nbsp;@array = split(//, $_);# Зчитуємо рядок в масив<br />&nbsp;&nbsp;&nbsp;&nbsp;$size = scalar @array;# Визначаємо кількість символів у рядку<br />&nbsp;&nbsp;&nbsp;&nbsp;$poch = "on";# Режим початку рядку<br />&nbsp;&nbsp;&nbsp;&nbsp;$kil = 0;# Змінна, яка в циклі показуватиме номер символа у вхідному рядку<br />&nbsp;&nbsp;&nbsp;&nbsp;until ($kil == $size)# Посимвольне зчитування рядку<br />&nbsp;&nbsp;&nbsp;&nbsp;{        <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ($poch =~ "on")# Якщо початок рядку<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (@array[$kil] =~ " ")# Якщо пробіл,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$ryadok = $ryadok."&nbsp;";# То він заміняється на символ "&nbsp;".<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else# Якщо не пробіл,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$poch = "off";# то це уже не початок рядку<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nepochatok;# і має бути оброблений спеціальною підпрограмою.                <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else# Якщо уже давно не початок рядку, то<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;nepochatok;# виклик спеціальної підпрограми для обробки<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br />&nbsp;&nbsp;&nbsp;&nbsp;$kil = $kil + 1;# Перехід до обробки наступного символу<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br />&nbsp;&nbsp;&nbsp;&nbsp;$ryadok = $ryadok."&lt;br /&gt;";# В кінець рядку вставляємо тег "&lt;br /&gt;"<br />&nbsp;&nbsp;&nbsp;&nbsp;print OUT $ryadok;# Записуємо рядок у вихідний файл<br />&nbsp;&nbsp;&nbsp;&nbsp;$ryadok = "";# Очищення змінної для наступного рядку<br />}<br />$size = "";# Очищення просто непотрібної змінної.</div><p align="justify">До речі, цей скрипт обробив сам себе, щоб я його виклав сюди.</p>', 'perl: обробка тексту для html', 'programming'),
(1325705272, '<p>Повідомлення на форумі SMF зберігає у таблиці "messages". Час повідомлення зберігається у колонці "poster_time". Зберігається він у форматі кількості секунд від 1970-01-01 00:00:00 GMT. Перевести у такий формат із звичайного можна за допомогою mysql так:</p><div class="code">mysql> SELECT UNIX_TIMESTAMP(''2011-01-23 21:14:00'');<br />+---------------------------------------+<br />| UNIX_TIMESTAMP(''2011-01-23 21:14:00'') |<br />+---------------------------------------+<br />|                            1295817240 |<br />+---------------------------------------+</div><p>\r\n\r\n, де 1295817240 — час у форматі кількості секунд від 1970-01-01 00:00:00 GMT.</p><p>Назад із такого формату можна перевести так:</p><div class="code">mysql> SELECT FROM_UNIXTIME(1295817240);<br />+---------------------------+<br />| FROM_UNIXTIME(1295817240) |<br />+---------------------------+<br />| 2011-01-23 21:14:00       |<br />+---------------------------+</div>', 'SMF: зміна часу допису', 'web'),
(1325705337, '<p>Знайшов у інтернеті <a href="http://zetcode.com/tutorials/rubygtktutorial/">непоганий туторіал</a> по програмуванню на Ruby для GTK.</p><p>Там є робочі приклади програм на ruby, зокрема:<div class="code">#!/usr/bin/ruby<br /><br /># ZetCode Ruby GTK tutorial<br />#<br /># This program creates a quit<br /># button. When we press the button,<br /># the application terminates. <br />#<br /># author: jan bodnar<br /># website: www.zetcode.com<br /># last modified: June 2009<br /><br />require ''gtk2''<br /><br />class RubyApp &lt; Gtk::Window<br />&nbsp;&nbsp;&nbsp;&nbsp;def initialize<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;super<br />&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;set_title  "Кнопка виходу"<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;signal_connect "destroy" do <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gtk.main_quit <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;init_ui<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;show_all<br />&nbsp;&nbsp;&nbsp;&nbsp;end<br />&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;def init_ui<br />&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fixed = Gtk::Fixed.new<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;add fixed<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;button = Gtk::Button.new "Вийти"<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;button.set_size_request 80, 30      <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;button.signal_connect "clicked" do <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gtk.main_quit <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;end<br />&nbsp;&nbsp;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fixed.put button, 100, 100       <br /><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;set_default_size 550, 400<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;set_window_position Gtk::Window::POS_CENTER<br />&nbsp;&nbsp;&nbsp;&nbsp;end<br />end<br /><br />Gtk.init<br />&nbsp;&nbsp;&nbsp;&nbsp;window = RubyApp.new<br />Gtk.main<br /><br /></div><p>Виводить вікно із кнопкою виходу.</p><p>Звісно, щоб воно працювало, в Gentoo потрібно встановити пакет dev-ruby/ruby-gtk2.</p>', 'Ruby GTK tutorial', 'programming'),
(1325705368, '<p>Записувати звук в Лінуксі можна лише одною командою:</p><div class="code">$ arecord -vv -fdat test.wav</div>', 'Записати звук з мікрофону', 'linux'),
(1325705397, '<p>Використовувати MySQL в Python дуже просто. Потрібно в Linux Gentoo встановити пакет dev-python/mysql-python чи в інших дистрибутивах — аналогічний.</p><p>Власне, як користуватись можете побачити в наступному прикладі, там до кожного рядку є коментар:</p><div class="code">#!/usr/bin/python<br /># -*- coding: utf-8 -*-<br /><br />import MySQLdb # Імпортування модуля з функціями для роботи з MySQL.<br /><br />mysql = MySQLdb.connect(host="localhost", user="root", passwd="пароль", db="mysite", charset=''utf8'') # Підключення до MySQL.<br /><br />cursor = mysql.cursor() # Формування курсору, за допомогою якого можна виконувати SQL-запити.<br /><br />sql = """CREATE TABLE IF NOT EXISTS banip (`ip` VARCHAR(15) PRIMARY KEY, `ostalos` TEXT);""" # Створення SQL запиту з створення таблиці.<br />cursor.execute(sql) # Виконання SQL-запиту.<br /><br />sql = """INSERT IGNORE INTO banip (`ip`, `ostalos`) VALUES (''111.111.111.111'', ''30'');""" # Створення SQL запиту з внесення в таблицю banip запису.<br />cursor.execute(sql) # Виконання SQL запиту.<br /><br />cursor.execute("""INSERT IGNORE INTO banip (`ip`, `ostalos`) VALUES (''222.222.222.222'', ''40'');""") # Аналогічно двом попереднім рядкам, тільки інший запис.<br /><br />cursor.execute("""SELECT ip FROM banip""") # Створення SQL-запиту з вибірки з таблиці banip всіх записів з стопчика "ip".<br />data =  cursor.fetchall() # Скачування результатів вибірки.<br /><br />for rec in data: # Перебір вибраних записів по одному.<br />&nbsp;&nbsp;&nbsp;&nbsp;print rec[0] # Вивід значення з стопчика "ip".<br /><br />mysql.close() # Закриваємо з''єдання із базою даних.</div>', 'Python + MySQL', 'python'),
(1325705440, '<p>Для того, щоб перевірити існування змінної в Python можна використовувати таку конструкцію:</p><div style="color:lime;background:black;white-space: pre-wrap;">try:<br />&#09;a<br />except:<br />&#09;print "Змінна a не існує"<br />else:<br />&#09;print "Змінна a існує"<br /></div><p>Створив програмку для перевірки цього "явища":</p><div style="color:lime;background:black;white-space: pre-wrap;"><span style="color:gray;">#!/usr/bin/python<br /># -*- coding: utf-8 -*-<br /></span>b = "sho" <span style="color:gray;"># Встановлення змінної "b".<br /></span>def perevirka(zminna): <span style="color:gray;"># Створення функції, яка перевіряє чи встановлена змінна і пише про це користувачу.<br /></span>&#09;message = "Змінна " <span style="color:gray;"># Те, що пишеться користувачу в незалежності від того, є змінна чи немає.<br /></span>&#09;message += zminna <span style="color:gray;"># Користувачу потрібно уточнити про яку змінну йде мова.<br /></span>&#09;execcode = "global " + zminna <span style="color:gray;"># Створення команди, яка має запросити глобальну змінну в цикл.<br /></span>&#09;exec execcode <span style="color:gray;"># Введення глобальної змінної у функцію.<br /></span>&#09;execcode = zminna <span style="color:gray;"># Потрібно виконати значення змінної.<br /></span>&#09;try: <span style="color:gray;"># Спроба<br /></span>&#09;&#09;exec execcode <span style="color:gray;"># "лапнути" змінну.<br /></span>&#09;except: <span style="color:gray;"># Якщо не вдалося, то<br /></span>&#09;&#09;message += " не існує." <span style="color:gray;"># сказати про це користувачу.<br /></span>&#09;else: <span style="color:gray;"># Якщо не вдалося, то<br /></span>&#09;&#09;message += " існує." <span style="color:gray;"># теж сказати по це користувачу.<br /></span>&#09;print message <span style="color:gray;"># Вивід повідомлення користувачу.<br /></span>perevirka("a") <span style="color:gray;"># Перевірка існування змінної "a" за допомогою функції "perevirka".<br /></span>perevirka("b") <span style="color:gray;"># Те саме, що в попередньому рядку, тільки змінної "b".</span><br /></div><p>Виведе:</p><blockquote>Змінна a не існує.<br />Змінна b існує.</blockquote><p>Також є інший спосіб перевірки — простіший:</p><div style="color:lime;background:black;white-space: pre-wrap;">if "a" in locals():<br />&#09;print ''Змінна a існує.''</div>', 'Python: перевірити існування змінної', 'python');
INSERT INTO `posts` (`time`, `text`, `zagolovok`, `cate`) VALUES
(1325705492, '<p align="justify">Я таки знайшов час і доробив свою програму для обробки тексту для вставки його в HTML.</p><p>Тепер ця програма вміє:</p><ul><li>коментарі в коді робить у стилі "comment";</li><li>текст в лапках в коді (не в коментарях) робить стилем "lapky";</li><li>горизонтальні табуляції і пробіли на початку рядків замінює на відповідні HTML спец.символи, щоб при операції експорту-імпорту записів в blogger пробіли і відступи на початку рядків не стерлись;</li><li>якщо користувач не вкаже програмі опцію -a, то текст буде оброблений без вставки стилів.</li></ul><p>Звісно, програма обробила сама себе, щоб я її виклав на свій блог.</p><div class="code"><span class="comment">#!/usr/bin/python3<br /># -*- coding: utf-8 -*-<br /><br /></span>import os <span class="comment"># Завантаження модуля, який містить функції для роботи з файлами і каталогами.<br /></span>import sys <span class="comment"># Завантаження модуля, який дасть можливість зчитати параметри з командного рядку.<br /><br /></span>try: <span class="comment"># Перевірка,<br /></span>&#09;sys.argv[1] <span class="comment"># чи було вказано перший параметр в командному рядку.<br /></span>except: <span class="comment"># Якщо не було вказано.<br /></span>&#09;type = "<span class="lapky">simple</span>" <span class="comment"># То програма буде обробляти вхідний код як звичайний текст.<br /></span>else:<br />&#09;if sys.argv[1] == "<span class="lapky">-h</span>" or sys.argv[1] == "<span class="lapky">--help</span>": <span class="comment"># Якщо було викликано довідку.<br /></span>&#09;&#09;print ("<span class="lapky">Це програма для обробки коду для вставки його в html.</span>")<br />&#09;&#09;print ("<span class="lapky">Вхідний код вона зчитує з файлу in.txt.</span>")<br />&#09;&#09;print (''<span class="lapky">Якщо хочете розширене форматування коду, використовуйте наступну опцію:</span>'')<br />&#09;&#09;print (''<span class="lapky">  -a</span>'')<br />&#09;&#09;quit() <span class="comment"># Завершення роботи програми.<br /></span>&#09;elif sys.argv[1] == "<span class="lapky">-a</span>": <span class="comment"># Якщо користувач захотів розширене форматування,<br /></span>&#09;&#09;type = "<span class="lapky">advanced</span>" <span class="comment"># вказати це у відповідній змінній.<br /></span>&#09;else: <span class="comment"># Якщо користувач вказав невідому опцію.<br /></span>&#09;&#09;print (''<span class="lapky">Неправильний ввід. Для виклику довідки використовуйте опцію "-h".</span>'')<br />&#09;&#09;quit() <span class="comment"># Завершення роботи програми.<br /><br /></span>if not os.path.exists("<span class="lapky">in.txt</span>"): <span class="comment"># Якщо файл in.txt не існує,<br /></span>&#09;print ("<span class="lapky">Файл in.txt не існує. Зупинка.</span>") <span class="comment"># то вивід повідомлення користувачу.<br /></span>&#09;quit () <span class="comment"># І завершення роботи програми.<br /></span>infile = open(''<span class="lapky">in.txt</span>'', ''<span class="lapky">r</span>'') <span class="comment"># Зчитування вхідного файлу.<br /><br /># Фаза 1 — заміна амперсандів на відповідні їм позначення у HTML і видалення перенесень рядку в їх кінцях.<br /></span>phase1 = [] <span class="comment"># Підготовка списку для першої фази.<br /></span>for line in infile: <span class="comment"># Порядкове зчитування файлу.<br /></span>&#09;ryadok = "<span class="lapky"></span>" <span class="comment"># Підготовка змінної для рядку.<br /></span>&#09;line = line.rstrip() <span class="comment"># Видалення символу переносу рядку в його кінці.<br /></span>&#09;for char in line: <span class="comment"># Посимвольне зчитування рядку.<br /></span>&#09;&#09;if char == "<span class="lapky">&amp;</span>": <span class="comment"># Якщо амперсанд, так як він в HTML означає початок спец.символів,<br /></span>&#09;&#09;&#09;ryadok += "<span class="lapky">&amp;amp;</span>" <span class="comment"># то він заміняється на йому відповідний спец.символ.<br /></span>&#09;&#09;else: <span class="comment"># Якщо не амперсанд, то<br /></span>&#09;&#09;&#09;ryadok += char <span class="comment"># символ залишається незмінним.<br /></span>&#09;phase1.append(ryadok) <span class="comment"># Внесення рядку в список.<br /><br /># Фаза 2 — заміна знаків менше і більше на відповідні їм позначення у HTML.<br /></span>phase2 = [] <span class="comment"># Підготовка списку для другої фази.<br /></span>for line in phase1: <span class="comment"># Порядкове зчитування вхідного тексту.<br /></span>&#09;ryadok = "<span class="lapky"></span>" <span class="comment"># Підготовка змінної для рядку.<br /></span>&#09;for char in line: <span class="comment"># Посимвольне зчитування рядку.<br /></span>&#09;&#09;if char == "<span class="lapky">&lt;</span>": <span class="comment"># Якщо знак "менше", який означає в html початок тегу, то<br /></span>&#09;&#09;&#09;ryadok += "<span class="lapky">&amp;lt;</span>" <span class="comment"># він заміняється на відповідний йому в HTML спец.символ.<br /></span>&#09;&#09;elif char == "<span class="lapky">&gt;</span>": <span class="comment"># Якщо знак "більше", який означає в html кінець тегу, то<br /></span>&#09;&#09;&#09;ryadok += "<span class="lapky">&amp;gt;</span>" <span class="comment"># він заміняється на відповідний йому в HTML спец.символ.<br /></span>&#09;&#09;else: <span class="comment"># Якщо інший символ, то<br /></span>&#09;&#09;&#09;ryadok += char <span class="comment"># він залишається незмінним.<br /></span>&#09;phase2.append(ryadok) <span class="comment"># Внесення рядку в список.<br /><br /></span>if type == "<span class="lapky">simple</span>": <span class="comment"># Якщо просте форматування.<br /></span>&#09;code = "<span class="lapky"></span>" <span class="comment"># Підготовка змінної, з якої виводимиться користувачу відформатований текст.<br /></span>&#09;for line in phase2: <span class="comment"># Порядкове зчитування вхідного тексту.<br /></span>&#09;&#09;ryadok = "<span class="lapky"></span>" <span class="comment"># Підготовка змінної для рядку.<br /></span>&#09;&#09;poch = "<span class="lapky">on</span>" <span class="comment"># Режим початку рядку.<br /></span>&#09;&#09;for char in line: <span class="comment"># Посимвольне зчитування рядку.<br /></span>&#09;&#09;&#09;if poch == "<span class="lapky">on</span>": <span class="comment"># Якщо увімкнено режим початку рядку.<br /></span>&#09;&#09;&#09;&#09;if char == "<span class="lapky"> </span>": <span class="comment"># Якщо пробіл, то<br /></span>&#09;&#09;&#09;&#09;&#09;ryadok += "<span class="lapky">&amp;nbsp;</span>" <span class="comment"># він заміняється на відповідний спец.символ в HTML.<br /></span>&#09;&#09;&#09;&#09;elif char == "<span class="lapky">	</span>": <span class="comment"># Якщо табуляція, то<br /></span>&#09;&#09;&#09;&#09;&#09;ryadok += "<span class="lapky">&amp;#09;</span>" <span class="comment"># заміняється на відповідний спец.символ в HTML.<br /></span>&#09;&#09;&#09;&#09;else: <span class="comment"># Якщо інакший символ.<br /></span>&#09;&#09;&#09;&#09;&#09;poch = "<span class="lapky">off</span>" <span class="comment"># То це уже не початок рядку.<br /></span>&#09;&#09;&#09;if poch == "<span class="lapky">off</span>": <span class="comment"># Якщо уже не початок рядку, то<br /></span>&#09;&#09;&#09;&#09;ryadok += char <span class="comment"># символ залишається незмінним.<br /></span>&#09;&#09;code = code + ryadok + "<span class="lapky">&lt;br /&gt;</span>" <span class="comment"># Кожен рядок має закінчуватися тегом &lt;br /&gt;.<br /></span>&#09;print (code) <span class="comment"># Вивід відформатованого коду користувачу.<br /></span>&#09;del code <span class="comment"># Видалення уже використаної змінної.<br /></span>&#09;quit() <span class="comment"># І успішне завершення роботи програми.<br /><br /># Фаза 3 — розставлення тегів &lt;span&gt; там, де потрібно.<br /></span>phase3 = [] <span class="comment"># Підготовка списку для третьої фази.<br /></span>span = "<span class="lapky">closed</span>" <span class="comment"># Введення змінної, яка показуватиме чи відкрито тег &lt;span&gt;.<br /></span>def ifspanclosed(char): <span class="comment"># Функція для обробки символів якщо тег &lt;span&gt; не відкрито.<br /></span>&#09;global ryadok <span class="comment"># Зчитування глобальної змінної "ryadok" у функцію.<br /></span>&#09;global span <span class="comment"># Зчитування глобальної змінної "span" у функцію.<br /></span>&#09;if char == "<span class="lapky">''</span>": <span class="comment"># Якщо символ — одинарна "лапка",<br /></span>&#09;&#09;ryadok = ryadok + char + ''<span class="lapky">&lt;span class="lapky"&gt;</span>'' <span class="comment"># то потрібно відкрити стиль "lapky".<br /></span>&#09;&#09;span = "<span class="lapky">''</span>" <span class="comment"># І сказати програмі змінною "span", що тег &lt;span&gt; відкрито.<br /></span>&#09;elif char == ''<span class="lapky">"</span>'': <span class="comment"># Якщо символ — подвійна "лапка",<br /></span>&#09;&#09;ryadok = ryadok + char + ''<span class="lapky">&lt;span class="lapky"&gt;</span>'' <span class="comment"># то потрібно відкрити стиль "lapky".<br /></span>&#09;&#09;span = ''<span class="lapky">"</span>'' <span class="comment"># І сказати програмі змінною "span", що тег &lt;span&gt; відкрито.<br /></span>&#09;elif char == "<span class="lapky">#</span>": <span class="comment"># Якщо символ, решітка, що в програмах зазвичай означає коментарі, то<br /></span>&#09;&#09;ryadok = ryadok + ''<span class="lapky">&lt;span class="comment"&gt;</span>'' + char <span class="comment"># потрібно відкрити стиль "comment".<br /></span>&#09;&#09;span = "<span class="lapky">#</span>" <span class="comment"># І сказати програмі змінною "span", що тег &lt;span&gt; відкрито.<br /></span>&#09;else: <span class="comment"># Якщо інший символ, то<br /></span>&#09;&#09;ryadok += char <span class="comment"># він залишається незмінним.<br /></span>for line in phase2: <span class="comment"># Порядкове зчитування вхідного тексту.<br /></span>&#09;ryadok = "<span class="lapky"></span>" <span class="comment"># Підготовка змінної для рядку.<br /></span>&#09;pershyi = "<span class="lapky">tak</span>" <span class="comment"># Режим першого символу.<br /></span>&#09;for char in line: <span class="comment"># Посимвольне зчитування рядку.<br /></span>&#09;&#09;if pershyi == "<span class="lapky">tak</span>": <span class="comment"># Режим першого символу.<br /></span>&#09;&#09;&#09;pershyi = "<span class="lapky">ni</span>" <span class="comment"># Вимкнення режиму першого символу.<br /></span>&#09;&#09;&#09;if span == "<span class="lapky">#</span>": <span class="comment"># Якщо в попередньому рядку був коментар<br /></span>&#09;&#09;&#09;&#09;if not char == "<span class="lapky">#</span>": <span class="comment"># і якщо перший символ — не решітка,<br /></span>&#09;&#09;&#09;&#09;&#09;ryadok += "<span class="lapky">&lt;/span&gt;</span>" + char <span class="comment"># то стиль "comment" закривається.<br /></span>&#09;&#09;&#09;&#09;&#09;span = "<span class="lapky">closed</span>" <span class="comment"># Про що програмі скаже змінна "span".<br /></span>&#09;&#09;&#09;&#09;else: <span class="comment"># Інакше<br /></span>&#09;&#09;&#09;&#09;&#09;ryadok += char <span class="comment"># символ залишається незмінним.<br /></span>&#09;&#09;&#09;elif span == "<span class="lapky">''</span>": <span class="comment"># Якщо було одинарні лапки відкрито і не закрито.<br /></span>&#09;&#09;&#09;&#09;if char == "<span class="lapky">''</span>": <span class="comment"># Якщо одинарні лапки закриваються, то<br /></span>&#09;&#09;&#09;&#09;&#09;ryadok = "<span class="lapky">&lt;/span&gt;</span>" + ryadok + "<span class="lapky">''</span>" <span class="comment"># закриття тегу "span"<br /></span>&#09;&#09;&#09;&#09;&#09;span = "<span class="lapky">closed</span>" <span class="comment"># і встановлення значення "closed" змінної "span", що означає, що тег &lt;span&gt; закрито.<br /></span>&#09;&#09;&#09;&#09;else: <span class="comment"># Інакше<br /></span>&#09;&#09;&#09;&#09;&#09;ryadok += char <span class="comment"># символ залишається незмінним.<br /></span>&#09;&#09;&#09;elif span == ''<span class="lapky">"</span>'': <span class="comment"># Якщо подвійні лапки було відкрито і не закрито.<br /></span>&#09;&#09;&#09;&#09;if char == ''<span class="lapky">"</span>'': <span class="comment"># Якщо подвійні лапки зачиняються, то<br /></span>&#09;&#09;&#09;&#09;&#09;ryadok = "<span class="lapky">&lt;/span&gt;</span>" + ryadok + ''<span class="lapky">"</span>'' <span class="comment"># закриття тегу "span"<br /></span>&#09;&#09;&#09;&#09;&#09;span = "<span class="lapky">closed</span>"&#09;<span class="comment"># і потрібно сказати програмі, що тег &lt;span&gt; закрито.<br /></span>&#09;&#09;&#09;&#09;else: <span class="comment"># Інакше<br /></span>&#09;&#09;&#09;&#09;&#09;ryadok += char <span class="comment"># символ залишається незмінним.<br /></span>&#09;&#09;&#09;elif span == "<span class="lapky">closed</span>": <span class="comment"># Якщо тег &lt;span&gt; було закрито, то<br /></span>&#09;&#09;&#09;&#09;ifspanclosed(char) <span class="comment"># використання відповідної функції для обробки.<br /></span>&#09;&#09;else: <span class="comment"># Якщо обробка уже не першого символу.<br /></span>&#09;&#09;&#09;if span == "<span class="lapky">#</span>": <span class="comment"># Якщо коментар уже почався,<br /></span>&#09;&#09;&#09;&#09;ryadok += char <span class="comment"># то символ залишається незміненим.<br /></span>&#09;&#09;&#09;elif span == "<span class="lapky">''</span>": <span class="comment"># Якщо було відкрито одинарні лапки.<br /></span>&#09;&#09;&#09;&#09;if char == "<span class="lapky">''</span>": <span class="comment"># Якщо одинарні лапки закриваються, то<br /></span>&#09;&#09;&#09;&#09;&#09;ryadok = ryadok + "<span class="lapky">&lt;/span&gt;</span>" + "<span class="lapky">''</span>" <span class="comment"># закривається тег &lt;span&gt;<br /></span>&#09;&#09;&#09;&#09;&#09;span = "<span class="lapky">closed</span>" <span class="comment"># про що каже однойменна змінна.<br /></span>&#09;&#09;&#09;&#09;else: <span class="comment"># Інакше<br /></span>&#09;&#09;&#09;&#09;&#09;ryadok += char <span class="comment"># символ залишається незмінним.<br /></span>&#09;&#09;&#09;elif span == ''<span class="lapky">"</span>'': <span class="comment"># Якщо подвійні лапки було відкрито.<br /></span>&#09;&#09;&#09;&#09;if char == ''<span class="lapky">"</span>'': <span class="comment"># Якщо вони закриваються, то<br /></span>&#09;&#09;&#09;&#09;&#09;ryadok = ryadok + "<span class="lapky">&lt;/span&gt;</span>" + ''<span class="lapky">"</span>'' <span class="comment"># і, відповідно, закривається стиль для лапок.<br /></span>&#09;&#09;&#09;&#09;&#09;span = "<span class="lapky">closed</span>"&#09;<span class="comment"># про що казатиме змінна "span".<br /></span>&#09;&#09;&#09;&#09;else: <span class="comment"># Інакше<br /></span>&#09;&#09;&#09;&#09;&#09;ryadok += char <span class="comment"># символ залишається незмінним.<br /></span>&#09;&#09;&#09;elif span == "<span class="lapky">closed</span>": <span class="comment"># Якщо тег &lt;span&gt; було закрито, то<br /></span>&#09;&#09;&#09;&#09;ifspanclosed(char) <span class="comment"># використання відповідної функції для обробки.<br /></span>&#09;phase3.append(ryadok) <span class="comment"># Внесення рядку в список.<br /><br /># Фаза 4 — заміна символів горизонтальної табуляції на відповідне їм позчення в HTML.<br /></span>phase4 = [] <span class="comment"># Підготовка списку для четвертої фази.<br /></span>for line in phase3: <span class="comment"># Порядкове зчитування вхідного тексту.<br /></span>&#09;ryadok = "<span class="lapky"></span>" <span class="comment"># Підготовка змінної для рядку.<br /></span>&#09;for char in line: <span class="comment"># Посимвольне зчитування рядку.<br /></span>&#09;&#09;if char == "<span class="lapky">	</span>": <span class="comment"># Якщо табуляція, то<br /></span>&#09;&#09;&#09;ryadok += "<span class="lapky">&amp;#09;</span>" <span class="comment"># заміняється на відповідний в HTML спец.символ.<br /></span>&#09;&#09;else: <span class="comment"># Якщо інший символ, то<br /></span>&#09;&#09;&#09;ryadok += char <span class="comment"># він залишається незмінним.<br /></span>&#09;phase4.append(ryadok) <span class="comment"># Внесення рядку в список.<br /><br /># Фаза 5 — заміна пробілів початку рядків на відповідне їм позначення в HTML.<br /></span>code = "<span class="lapky"></span>" <span class="comment"># Підготовка змінної для відформатованого тексту.<br /></span>for line in phase4: <span class="comment"># Порядкове зчитування вхідного тексту.<br /></span>&#09;ryadok = "<span class="lapky"></span>" <span class="comment"># Підготовка змінної для рядку.<br /></span>&#09;poch = "<span class="lapky">on</span>" <span class="comment"># Якщо увімкнено режим початку рядку.<br /></span>&#09;for char in line: <span class="comment"># Посимвольне зчитування рядку.<br /></span>&#09;&#09;if poch == "<span class="lapky">on</span>": <span class="comment"># Якщо увімкнено режим початку рядку.<br /></span>&#09;&#09;&#09;if char == "<span class="lapky"> </span>": <span class="comment"># Якщо пробіл, то<br /></span>&#09;&#09;&#09;&#09;ryadok += "<span class="lapky">&amp;nbsp;</span>" <span class="comment"># він заміняється на відповідний спец.символ в HTML.<br /></span>&#09;&#09;&#09;else: <span class="comment"># Якщо інший символ.<br /></span>&#09;&#09;&#09;&#09;poch = "<span class="lapky">off</span>" <span class="comment"># уже не початок рядку.<br /></span>&#09;&#09;if poch == "<span class="lapky">off</span>": <span class="comment"># Якщо уже не початок рядку.<br /></span>&#09;&#09;&#09;ryadok += char <span class="comment"># То символ залишається незмінним.<br /></span>&#09;ryadok += ''<span class="lapky">&lt;br /&gt;</span>'' <span class="comment"># Вставлення тегу, що в html означає перенос рядку.<br /></span>&#09;code += ryadok <span class="comment"># Формування змінної для виводу.<br /><br /></span>if not span == "<span class="lapky">closed</span>": <span class="comment"># Якщо тег &lt;span&gt; не було закрито,<br /></span>&#09;code += "<span class="lapky">&lt;/span&gt;</span>" <span class="comment"># то потрібно його закрити.<br /></span>del span <span class="comment"># Видалення змінної "span" так як уже не потрібна.<br /><br /></span>code = ''<span class="lapky">&lt;div class="code"&gt;</span>'' + code + ''<span class="lapky">&lt;/div&gt;</span>'' <span class="comment"># Встановлення стилю "код" для всього тексту.<br /></span>print (code) <span class="comment"># Вивід відформатованого коду користувачу.<br /></span>del code <span class="comment"># Видалення уже використаної змінної.<br /></span>quit() <span class="comment"># І успішне завершення роботи програми.<br /></span></div><p>Звісно, моя програма далеко не єдина у свому роді, але мені захотілось трохи програмувати.</p>', 'Python: обробка тексту для html', 'python'),
(1325705677, '<p>Для того, щоб в Python вивести в стовпчик список модулів, що завантажені, можна використовувати таку конструкцію:</p><div class="code">for line in sys.modules:<br />&#09;print line<br /></div><p>Звісно, для виконання цієї конструкції потрібно, щоб був завантажений модуль "sys". А щоб перевірити чи завантажений модуль "sys" можна використовувати конструкцію з try:</p><div class="code"><span class="comment"></span>try:<br />&#09;sys<br />except:<br />&#09;print ("<span class="lapky">Модуль sys не завантажено.</span>")<br />else:<br />&#09;print ("<span class="lapky">Модуль sys завантажено.</span>")<br /></div><p>Хоча... за допомогою try можна перевіряти й інші модулі. Але не вивести список модулів.</p>', 'Python: вивести список завантажених модулів', 'python'),
(1325705704, '<p align="justify">Встановив я phpbb. Працює. Але зверху кожної сторінки пише:</p><blockquote>[phpBB Debug] PHP Notice: in file /index.php on line 86: date() [function.date]: It is not safe to rely on the system''s timezone settings. You are *required* to use the date.timezone setting or the date_default_timezone_set() function. In case you used any of those methods and you are still getting this warning, you most likely misspelled the timezone identifier. We selected ''UTC'' for ''GMT/0.0/no DST'' instead<br />[phpBB Debug] PHP Notice: in file /index.php on line 86: getdate() [function.getdate]: It is not safe to rely on the system''s timezone settings. You are *required* to use the date.timezone setting or the date_default_timezone_set() function. In case you used any of those methods and you are still getting this warning, you most likely misspelled the timezone identifier. We selected ''UTC'' for ''GMT/0.0/no DST'' instead</blockquote><p>Я в файлі php.ini рядок:</p><div class="code">;date.timezone =</div><p>відредагував так:</p><div class="code">date.timezone = Europe/London</div><p>Перезавантажив apache і побачив, що ця помилка зникла.</p>', 'phpbb', 'web'),
(1325705732, '<p>Для того щоб відформатувати флешку в FAT32 в Linux потрібно виконати всього одну команду:</p><div class="code"># /usr/sbin/mkdosfs -F 32 -n мітка_диску /dev/sda1</div><p>, де замість:<br />"мітка_диску" — написати бажану мітку диску, але вона не повинна бути дуже довгою і містити пробіли та спеціальні символи;<br />"/dev/sda1" — файл пристрою, який відповідає розділу флешки, що потрібно відформатувати.</p>', 'Відформатувати флешку в FAT32', 'linux'),
(1325705754, '<p>Для того, щоб браузер правильно розпізнавав кодування html сторінки варто всередині тегу &lt;head&gt; використовувати тег &lt;meta&gt;. Наприклад, для кодування UTF-8:</p><div class="code">&lt;meta http-equiv="Content-Type" content="text/html;charset=utf-8" &gt;</div><p>Залишу тут для себе заготовочку html сторінки:</p><div class="code">&lt;html&gt;<br />&#09;&lt;head&gt;<br />&#09;&#09;&lt;meta http-equiv="Content-Type" content="text/html;charset=utf-8" &gt;<br />&#09;&lt;/head&gt;<br />&#09;&lt;body&gt;<br />&#09;&lt;/body&gt;<br />&lt;html&gt;</div>', 'Кодування в HTML', 'web'),
(1325705785, '<p align="justify">У нових версіях пакетного менеджера paludis використовується команда cave замість paludis. І до команди cave опції по-іншому називаються. Приведу приклади застосування cave:</p><ul><li>Встановити Opera:<div class="code"># cave resolve opera -x</div></li><li>Вивести залежності, які потрібні для встановлення Opera:<div class="code">$ cave resolve opera</div></li><li>Встановити Opera, не вносячи змін у файл world (не позначати Opera як вручну встановлене):<div class="code"># cave resolve opera -x --preserve-world</div>або так:<div class="code"># cave resolve opera -x -1</div></li><li>Видалити git і усі пакети, які від нього залежать:<div class="code"># cave uninstall --remove-if-dependent ''*/*'' git -x</div></li><li>Синхронізувати дерево портежів:<div class="code"># cave sync</div></li><li>Вивести звіт про помилки:<div class="code">$ cave report</div></li><li>Вивести обернені залежності для apache:<div class="code">$ cave uninstall apache</div></li><li>Лише скачати файли, необхідні для встановлення гри Герої меча і магії 3:<div class="code"># cave resolve heroes3 -xf</div></li></ul><p>Перевіряв на Paludis версії 0.60.4.</p>', 'cave', 'linux'),
(1325705807, '<p align="justify">Виникла потреба відредагувати id3 в mp3 файлі, тобто змінити інформацію про назву/автора/жанр/рік, яка прикріплена до самого файлу.</p><p align="justify">Я користуюсь програмою Audacious2 для відтворення mp3 файлів. Але Audacious2 чомусь теги деяких mp3 файлів може редагувати, а деяких — ні.</p><p>Тому для редагування id3 можна скористатись консольною програмою — <b>id3tool</b>, яка не "фейлить" як Audacious. Приведу приклад використання цієї програми. Встановити теги:</p><div class="code">$ id3tool djsadan_-_digital_mirror.mp3 -G "Other" -r "DJ Sadan" -t "Digital mirror"</div><p>, де<br />djsadan_-_digital_mirror.mp3 — ім''я mp3 файлу;<br />-G — жанр;<br />-r — ім''я виконавця;<br />-t — назва пісні.</p><p>Подивитись id3 файлу:</p><div class="code">Filename: djsadan_-_digital_mirror.mp3<br />Song Title:&#09;Digital mirror<br />Artist:&#09;&#09;DJ Sadan<br />Genre:&#09;&#09;Other (0xC)<br /></div><p align="justify">Все добре, лише шкода, що id3tool не має функції видалення id3 з mp3. Надіюсь, поки-що не має.</p>', 'id3tool', 'linux'),
(1325705832, '<p align="justify">Для роботи з MySQL в Python-2 є модуль, який називається MySQLdb, а в Python-3 у мене такого модуля не було. Виправив ситуацію наступним чином.</p><p align="justify">Звідси: <a href="https://github.com/davispuh/MySQL-for-Python-3">https://github.com/davispuh/MySQL-for-Python-3</a> скачав модуль MySQLdb для третього Пайтона. І встановив його:</p><div class="code"># python3 setup.py install</div><p>Приклад роботи Python-3 з модулем MySQLdb:</p><div class="code"><span class="comment">#!/usr/bin/python3<br /></span>import MySQLdb<br />mysql = MySQLdb.connect(host="<span class="lapky">localhost</span>", user="<span class="lapky">root</span>", passwd="<span class="lapky">пароль</span>", db="<span class="lapky">mysite</span>", charset=''<span class="lapky">utf8</span>'') <span class="comment"># Підключення до MySQL.<br /></span>cursor = mysql.cursor() <span class="comment"># Формування курсору, за допомогою якого можна виконувати SQL-запити.<br /><br /></span>sql = """<span class="lapky">CREATE TABLE IF NOT EXISTS banip (`ip` VARCHAR(15) PRIMARY KEY, `ostalos` TEXT);</span>""" <span class="comment"># Створення SQL запиту з створення таблиці.<br /></span>cursor.execute(sql) <span class="comment"># Виконання SQL-запиту.<br /><br /></span>sql = """<span class="lapky">INSERT IGNORE INTO banip (`ip`, `ostalos`) VALUES (''111.111.111.111'', ''30'');</span>""" <span class="comment"># Створення SQL запиту з внесення в таблицю banip запису.<br /></span>cursor.execute(sql) <span class="comment"># Виконання SQL запиту.<br /><br /></span>cursor.execute("""<span class="lapky">INSERT IGNORE INTO banip (`ip`, `ostalos`) VALUES (''222.222.222.222'', ''40'');</span>""") <span class="comment"># Аналогічно двом попереднім рядкам, тільки інший запис.<br /><br /></span>cursor.execute("""<span class="lapky">SELECT ip FROM banip</span>""") <span class="comment"># Створення SQL-запиту з вибірки з таблиці banip всіх записів з стопчика "ip".<br /></span>data = cursor.fetchall() <span class="comment"># Скачування результатів вибірки.<br /><br /></span>for rec in data: <span class="comment"># Перебір вибраних записів по одному.<br /></span>&#09;print (rec[0]) <span class="comment"># Вивід значення з стопчика "ip".<br /><br /></span>mysql.close() <span class="comment"># Закриваємо з''єдання із базою даних.</span></div>', 'Python3 + MySQL', 'python'),
(1325705860, '<p align="justify">Знайшов у інтернеті легеньку консольну програмку, яка може відновити видалені файли з розділу з файловою системою ext3 чи ext4. Ця програма називається <b>extundelete</b>.</p><p>Напишу як вона працює.</p><ul><li>Відновлює файли вона в поточний каталог, тобто перед її запуском потрібно зайти в каталог, в який хочемо, щоб були відновлені файли:<p><div class="code"># cd /каталог-в-який-буде-закинуто-відновлені-файли</div></p></li><li>Дуже бажано не відновлювати файли в каталог, який знаходиться на тому самому розділі, з якого відновлюються дані. І, взагалі, навіть краще відмонтувати розділ, з якого будуть відновлені дані:<p><div class="code"># umount /dev/hda1</div></p>Або перемонтувати в режим рід-онлі (читання лише). Так надійніше.</li><li>Запускати програму потрібно наступним чином.<p>Для того, щоб відновити всі видалені файли:</p><div class="code"># extundelete /dev/hda1 --restore-all</div><p>Відновити лише певний файл:</p><div class="code"># extundelete /dev/hda1 --restore-file /шлях-до-файлу/ім''я-файлу</div><p>Відновити файли з певного каталогу:</p><div class="code"># extundelete /dev/hda1 --restore-directory /шлях-до каталогу/каталог</div><p>Варто зауважити, що шлях до каталогу повинен починатися з кореня того розділу, з якого відновлюються дані, а не з кореня розділу, в якому дані зберігались.</p></li><li>Також можна застосовувати опції "--before date" або "--after date", які означають відновлювати файли, видалені перед або після якоїсь дати відповідно. Дату потрібно вказувати у форматі кількості секунд від 1970-01-01 00:00:00 GMT.</li></ul><p>Повний список опцій можна подивитись тут: <a href="http://extundelete.sourceforge.net/options.html">http://extundelete.sourceforge.net/options.html</a></p>', 'Відновлення файлів з ext4', 'linux'),
(1325705880, '<p align="justify">Тільки-що оновив media-libs/mesa до версії 7.11 у своєму Gentoo. Тепер mesa має USE-прапорець "egl". Спочатку я зібрав mesa з вимкненим цим прапорцем, але через це перестало запускатися Xfce, видавало помилку:</p><div class="code">xfce4-session: error while loading shared libraries: libEGL.so.1: cannot open shared object file: No such file or directory</div><p align="justify">А коли зібрав mesa з увімкненим прапорцем "egl", то Xfce нормально запустилося.</p>', 'Навіщо збирати mesa з підтримкою EGL', 'x11'),
(1325705901, '<p>Знайшов у інтернеті як зробити сторінку з переадресацією без використання javascript. Ось заготовка:</p><div class="code">&lt;html&gt;<br />&#09;&lt;head&gt;<br />&#09;&#09;&lt;meta http-equiv="<span class="lapky">refresh</span>" content="<span class="lapky">1; URL=./index.py</span>"&gt;<br />&#09;&lt;/head&gt;<br />&#09;&lt;body&gt;<br />Redirecting to a &lt;a href="<span class="lapky">./index.py</span>"&gt;home page&lt;/a&gt;.<br />&#09;&lt;/body&gt;<br />&lt;/html&gt;<br /></div><p>Як можете побачити, переадресація встановлюється одним тегом meta. <span class="lapky">content="1"</span> означає, що переадресація сторінки відбудеться через 1 секунду.</p>', 'Переадресація у HTML', 'web'),
(1325705931, 'Знайшов у інтернеті непогану статтю про те, як використовувати потоки в Python:<br /><a href="http://keysolutions.ru/articles/osnovy-raboty-s-potokami-v-python">http://keysolutions.ru/articles/osnovy-raboty-s-potokami-v-python</a><p>Приведу приклад використання двох потоків у Python 3:</p><div class="code"><span class="comment">#!/usr/bin/python3<br /># -*- coding: utf-8 -*-<br /><br /></span>import threading <span class="comment"># Імпорт модуля для роботи з потоками.<br /></span>import time <span class="comment"># Імпорт модуля для роботи з часом.<br /><br /></span>class ThreadOne(threading.Thread): <span class="comment"># Потік 1.<br /></span>&#09;def run(self): <span class="comment"># Що робити коли запущено потік.<br /></span>&#09;&#09;print (time.strftime("<span class="lapky">%H:%M:%S </span>"),''<span class="lapky">Потік № 1 стартує...</span>'') <span class="comment"># Функція time.strftime скаже котра година.<br /></span>&#09;&#09;time.sleep (2) <span class="comment"># Почекати дві секунди.<br /></span>&#09;&#09;print (time.strftime("<span class="lapky">%H:%M:%S </span>"),''<span class="lapky">Потік № 1 завершив свою роботу.</span>'')<br /><br />class ThreadTwo(threading.Thread): <span class="comment"># Потік 2.<br /></span>&#09;def run(self):<br />&#09;&#09;print (time.strftime("<span class="lapky">%H:%M:%S </span>"),''<span class="lapky">Потік № 2 стартує...</span>'')<br />&#09;&#09;thingOne.join() <span class="comment"># Призупинити роботу потоку №2 поки потік №1 не завершить свою роботу.<br /></span>&#09;&#09;print (time.strftime("<span class="lapky">%H:%M:%S </span>"),''<span class="lapky">Потік № 2 завершив свою роботу.</span>'')<br /><br />thingOne = ThreadOne() <span class="comment"># Ця маніпуляція потрібна, щоб не видавало помилки "RuntimeError: cannot join thread before it is started".<br /></span>thingOne.start() <span class="comment"># Запуск першого потоку.<br /></span>thingTwo = ThreadTwo()<br />thingTwo.start() <span class="comment"># Запуск другого потоку.<br /></span></div>', 'Threading in Python', 'python'),
(1325705958, '<p>Конвертувати час у Python 3 із форматі кількості секунд від 1970-01-01 00:00:00 GMT у легко зрозумілий людині формат можна так:</p><div class="code">>>> import time\r\n\r\n>>> time.strftime("%Y-%m-%d %H:%M", time.localtime(int("1284101485")))\r\n\r\n''2010-09-10 06:51''</div><p>Рецепт знайшов <a href="http://stackoverflow.com/questions/3682748/converting-unix-timestamp-string-to-readable-date-in-python">тут</a>.</p><p>Додатково використав <a href="http://docs.python.org/library/time.html"> документацію із сайту Python`а.</a></p>', 'Python3: from a unix timestamp', 'python'),
(1325705991, '<p align="justify">Є такий собі безкоштовний хостинг на <a href="http://x10hosting.com">x10hosting.com</a>. Мені він цікавий тим, що підтримує Пайтон. Я зареєструвався, уже мав намір завести там свій блог, але, як виявилось, там немає модуля MySQLdb, який використовується моїм самописним двигунцем блогу. Ось список модулів Python, які доступні на даному хостингу (вивід <b>help(''modules'')</b>):</p><div class="code"><span class="lapky">1 atk inspect robotparser Alchemist audiodev iotop (package) rpm (package) ArrayPrinter audioop itertools rpmUtils (package) BaseHTTPServer audit ixf86config sabayon (package) Bastion auparse japanese (package) sched CDROM avc keyword select CGIHTTPServer base64 kudzu selinux (package) CORBA bdb lapack_lite semanage CacheBlackBox binascii ldap (package) seobject Canvas binhex ldapurl sepolgen (package) ConfigParser bisect ldif setroubleshoot (package) Cookie bonobo (package) libiscsi sets DLFCN bsddb (package) libsvn (package) sgmllib Dialog bz2 libuser sha DocXMLRPCServer cElementTree libxml2 shelve FFT (package) cPickle libxml2mod shlex FileBlackBox cStringIO libxslt shm FileDialog cairo (package) libxsltmod shutil FixTk calendar linecache signal ForgeBlackBox cgi linuxaudiodev site HTMLParser cgitb locale smtpd IN chunk logging (package) smtplib LinearAlgebra cmath macpath snack M2Crypto (package) cmd macurl2path sndhdr MA (package) code mailbox socket MLab codecs mailcap sos (package) Matrix codeop markupbase sqlite (package) MimeWriter collections marshal sqlitecachec Numeric colorsys math sre ORBit commands md5 sre_compile PortableServer compileall mhlib sre_constants Precision compiler (package) mimetools sre_parse Queue cookielib mimetypes stat RNG (package) copy mimify statcache RandomArray copy_reg mmap statvfs ScrolledText cracklib modulefinder string SimpleDialog crypt multiarray stringold SimpleHTTPServer csv multifile stringprep SimpleXMLRPCServer ctypes (package) mutex strop SocketServer curses (package) netrc struct StringIO datetime new subprocess TYPES dbhash nis sunau Tix dbm nntplib sunaudio Tkconstants dbus (package) ntpath svn (package) Tkdnd decimal nturl2path symbol Tkinter difflib numeric_version symtable URLBlackBox dircache oddjob sys UserArray dis opcode syslog UserDict distutils (package) operator tabnanny UserList dl optik tarfile UserString doctest optparse telnetlib _LWPCookieJar drv_libxml2 os tempfile _MozillaCookieJar dsextras os2emxpath termios __builtin__ dsml ossaudiodev test (package) __future__ dumbdbm pango textwrap _alchemist dummy_thread pangocairo this _audit dummy_threading parser thread _bisect elementtree (package) parted threading _bsddb email (package) pdb time _codecs encodings (package) pickle timeit _codecs_cn errno pickletools timing _codecs_hk exceptions pipes tkColorChooser _codecs_iso2022 fcntl pirut (package) tkCommonDialog _codecs_jp filecmp pkgutil tkFileDialog _codecs_kr fileinput platform tkFont _codecs_tw fnmatch popen2 tkMessageBox _csv formatter poplib tkSimpleDialog _ctypes fpformat posix toaiff _ctypes_test ftplib posixfile token _curses gamin posixpath tokenize _curses_panel gc pprint trace _gamin gconf profile traceback _heapq gdbm pstats tty _hotshot getopt pty turtle _kudzu getpass pwd types _ldap gettext py_compile tzparse _locale glob pyalchemist umath _multibytecodec gnome (package) pyalchemist_python unicodedata _numpy gnomecanvas pyclbr unittest _random gnomevfs (package) pydoc urlgrabber (package) _semanage gobject (package) pyexpat urllib _snack gopherlib pygtk urllib2 _socket grp pynche (package) urlparse _sqlite gtk (package) pynotify (package) user _sqlitecache gtkhtml2 quopri uu _sre gtkunixprint random warnings _ssl gzip ranlib wave _strptime heapq re weakref _symtable hmac readline webbrowser _testcapi hotshot (package) reconvert whichdb _threading_local htmlentitydefs regex whrandom _tkinter htmllib regex_syntax xdrlib _weakref httplib regsub xf86config acutil idlelib (package) repr xml (package) aifc ihooks resource xmllib anydbm imageop rexec xmlrpclib array imaplib rfc822 xxsubtype arrayfns imghdr rgbimg yum (package) asynchat imp rhpl (package) zipfile asyncore imputil rhpxl (package) zipimport atexit iniparse (package) rlcompleter zlib Enter any module name to get more help. Or, type "modules spam" to search for modules whose descriptions contain the word "spam". None</span></div>', 'Хостинг x10hosting.com', 'web'),
(1325706022, '<p align="justify">Коротко напишу як зчитування дані, введені в формі (методом POST), Пайтоном.</p><p>Для цього потрібен модуль cgi:</p><div class="code">import cgi</div><p>Змінні зчитувати так:</p><div class="code">form = cgi.FieldStorage()</div><p>І отримувати доступ до значень по ключах так:</p><div class="code">login = form.getvalue("login")</div><p>У цьому прикладі значення з поля "логін" було зчитано у змінну ''login''.</p>', 'Python: метод POST', 'python'),
(1325706042, '<p align="justify">Знайшов у інтернеті безкоштовний хостинг з Python 2.7 і модулем MySQLdb для Python.</p><p>Це — <a href="http://ho.ua">ho.ua</a>.</p><p>Створив тестову сторінку для перевірки працездатності Python:</p><div class="code"><span class="comment">#!/usr/local/bin/python -u<br /></span>import MySQLdb<br />print(''<span class="lapky">Content-type: text/html;encoding=UTF-8\n\n</span>'')<br />import sys<br />print(sys.version)</div><p>Вивід цієї сторінки такий:</p><blockquote>2.7.2 (default, Nov 7 2011, 11:29:44) [GCC 4.2.1 20070719 [FreeBSD]] </blockquote><p>Я зараз переїхав би на цей хостинг, але мені треба з Python 3, я в пошуках безкоштовного хостингу з Python 3 і модулем MySQLdb.</p>', 'Безкоштовний хостинг з Python 2.7', 'web'),
(1325706072, '<p>Замінювати текст у декількох файлах в Лінуксі просто. Це можна робити лише одною простою консольною командою:</p><div class="code">$ sed -i ''s/старий_текст/новий_текст/'' [files]</div><p>Замість "[files]" можна вказувати файли як по одному, так і по масці.</p>', 'Замінити текст в декількох файлах', 'linux'),
(1326449411, '<p>Для того, щоб в Лінуксі програма Hamachi (для створення віртуальних мереж) працювала і не видавала помилки: "open(''/dev/net/tun'') failed with 19 (No such device)", потрібно включити в ядрі опцію:</p><div style="color:black;background-color:#E8E8E8;font-family: ''Courier New'';">Device Drivers  ---><br />&nbsp;&nbsp;&nbsp;&nbsp;[*] Network device support  ---><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<*>   Universal TUN/TAP device driver support</div><p>І все. Рецепт вичитав <a href="http://forums.gentoo.org/viewtopic-t-441180.html">тут</a>.</p>', 'Hamachi', 'networking');
INSERT INTO `posts` (`time`, `text`, `zagolovok`, `cate`) VALUES
(1328178045, '<p>Після недавнього оновлення системи перестала працювати клавіатура в X сервері. Але цікаво те, що змінювати розкладки клавіатури, комбінація клавіш для чого була виставляється командою setxkbmap, я міг.</p><p>X сервер видавав помилку:</p><div class="code">The XKEYBOARD keymap compiler (xkbcomp) reports:<br />&gt; Warning:          Multiple interpretations of<br />"NoSymbol+AnyOfOrNone(all)"<br />&gt;                   Using last definition for duplicate fields<br />Errors from xkbcomp are not fatal to the X server</div><p>Вилікував це оновленням x11-apps/xkbcomp з версії 1.2.1 до 1.2.3. Версія іксів у мене — 1.10.4-r1.</p>', 'Не працювала клавіатура в іксах', 'x11'),
(1328043600, 'Якщо я збираю пакет x11-base/xorg-server з увімкненим USE прапорцем ''udev'', то я можу прокручувати сторінки обома коліщатками моєї миші, якщо ж з вимкненим ''udev'', то лише переднім коліщатком. Це єдине, на що впливає цей USE прапорець для даного пакету (згідно моїх недовгих спостережень).', 'x11-base/xorg-server udev', 'x11'),
(1329042299, '<p>Довгий час я грав 1.8.6 версію гри "Битва за Веснот", але прийшов час переходити на версію 1.10. Тому я розмаскував відповідний ебілд, набрав в консолі:</p><div class="code"># cave resolve wesnoth -x</div><p>і став чекати завершення компіляції. Але не дочекався. Компіляція перервалася з помилкою:</p><div class="code">[ 87%] Building CXX object src/CMakeFiles/wesnoth.dir/ai/testing/aspect_attacks.cpp.o<br />cd /var/tmp/paludis/games-strategy-wesnoth-1.10/work/wesnoth-1.10_build/src && /usr/bin/i686-pc-linux-gnu-g++  -DLUA_USE_POSIX -DHAVE_CONFIG_H -DDISABLE_POOL_ALLOC -D_X11 -DHAS_RELATIVE_LOCALEDIR=1 -DHAVE_LIBDBUS  -DNDEBUG -O2 -W -Wall -std=c++98  -O2 -march=athlon64 -pipe -I/usr/include/boost-1_46 -I/usr/include/SDL -I/usr/include/pango-1.0 -I/usr/include/cairo -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include -I/usr/include/pixman-1 -I/usr/include/freetype2 -I/usr/include/libpng15 -I/usr/include/libdrm -I/usr/include/dbus-1.0 -I/usr/lib/dbus-1.0/include -I/var/tmp/paludis/games-strategy-wesnoth-1.10/work/wesnoth-1.10/src -I/var/tmp/paludis/games-strategy-wesnoth-1.10/work/wesnoth-1.10_build/src   -I/usr/include/SDL -D_GNU_SOURCE=1 -D_REENTRANT -DWESNOTH_PATH="/usr/share/games/wesnoth" -DLOCALEDIR="translations" -DFIFODIR="/var/run/wesnothd" -o CMakeFiles/wesnoth.dir/ai/testing/aspect_attacks.cpp.o -c /var/tmp/paludis/games-strategy-wesnoth-1.10/work/wesnoth-1.10/src/ai/testing/aspect_attacks.cpp<br />{standard input}: Assembler messages:<br />{standard input}:45190: Warning: end of file not at end of a line; newline inserted<br />{standard input}:46031: Error: number of operands mismatch for `mov''<br />{standard input}: Error: open CFI at the end of file; missing .cfi_endproc directive<br />i686-pc-linux-gnu-g++: Internal error: Killed (program cc1plus)<br />Please submit a full bug report.<br />See <http://bugs.gentoo.org/> for instructions.<br />make[2]: *** [src/CMakeFiles/wesnoth.dir/ai/registry.cpp.o] Error 1<br />make[2]: *** Waiting for unfinished jobs....<br />make[2]: Leaving directory `/var/tmp/paludis/games-strategy-wesnoth-1.10/work/wesnoth-1.10_build''<br />make[1]: Leaving directory `/var/tmp/paludis/games-strategy-wesnoth-1.10/work/wesnoth-1.10_build''<br />make[1]: *** [src/CMakeFiles/wesnoth.dir/all] Error 2<br />make: *** [all] Error 2<br />/usr/libexec/paludis/utils/emake: emake returned error 2<br />!!! ERROR in games-strategy/wesnoth-1.10::gentoo:<br />!!! In cmake-utils_src_make at line 1184<br />!!! Make failed!<br />!!! Call stack:<br />!!!    * cmake-utils_src_make (/var/tmp/paludis/games-strategy-wesnoth-1.10/temp/loadsaveenv:1184)<br />!!!    * enable_cmake-utils_src_compile (/var/tmp/paludis/games-strategy-wesnoth-1.10/temp/loadsaveenv:2278)<br />!!!    * _execute_optionaly (/var/tmp/paludis/games-strategy-wesnoth-1.10/temp/loadsaveenv:558)<br />!!!    * cmake-utils_src_compile (/var/tmp/paludis/games-strategy-wesnoth-1.10/temp/loadsaveenv:1165)<br />!!!    * src_compile (/var/tmp/paludis/games-strategy-wesnoth-1.10/temp/loadsaveenv:4536)<br />!!!    * ebuild_f_compile (/usr/libexec/paludis/2/src_compile.bash:56)<br />!!!    * ebuild_main (/usr/libexec/paludis/ebuild.bash:646)<br />!!!    * main (/usr/libexec/paludis/ebuild.bash:672)<br />diefunc: making ebuild PID 6313 exit with error<br />die trap: exiting with error.<br />Error:<br />  * In program cave perform install --hooks --managed-output --output-exclusivity with-others =games-strategy/wesnoth-1.10:0::gentoo --destination installed --replacing =games-strategy/wesnoth-1.8.6:0::installed --x-of-y 1 of 1:<br />  * When installing ''games-strategy/wesnoth-1.10:0::gentoo'' replacing { ''games-strategy/wesnoth-1.8.6:0::installed'' }:<br />  * When running an ebuild command on ''games-strategy/wesnoth-1.10:0::gentoo'':<br />  * Install failed for ''games-strategy/wesnoth-1.10:0::gentoo'' (paludis::ActionFailedError)</div><p>Вирішив цю проблему зміною -march=athlon64 на -march=native. Це в налаштуваннях компілятора. Зауважу, що процесор у мене — Sempron 2600+.</p>', 'Встановити The Battle for Wesnoth 1.10', 'games'),
(1330179519, '<p>Встановив я wine і вирішив пограти Counter-strike 1.6. Але граючи, я помітив, що шрифти кострубаті. Виправив це копіюванням шрифтів із вінди у вайн:</p><div class="code">cp -L /mnt/hdc3/WINDOWS/Fonts/* /home/user/.wine/drive_c/windows/Fonts/</div>', 'Шрифти в Counter-strike', 'games'),
(1330265345, '<p>Від недавнього оновлення sysvinit після завантаження Лінуксу, але перед вводом логіну і паролю, став очищуватися екран. Може комусь це і потрібно, але мені більш подобається якщо ці останні повідомлення залишаються. Тому я недовго пошукав і знайшов <a href="https://wiki.archlinux.org/index.php/Disable_Clearing_of_Boot_Messages">тут</a> рішення. У файлі /etc/inittab рядочок:</p><div class="code">c1:12345:respawn:/sbin/agetty 38400 tty1 linux</div><p>змінив на:</p><div class="code">c1:12345:respawn:/sbin/agetty 38400 tty1 linux --noclear</div><p>Тепер не очищується екран, тобто стало так, як я і хотів.</p>', 'Відключити очищення екрану після завантаження', 'linux'),
(1331290371, 'Діло у тому, що у мене збивалися значки на робочому столі в Xfce 4.8.0 коли я запускав повноекранну гру з роздільною здатністю, відмінною від встановленої у Xfce. На джентушному форумі мені підказали, що у xfdesktop-4.9.0 це виправлено. А у мене xfdesktop було версії 4.8.0. І дійсно, розмаскував я xfce-base/xfdesktop-4.9.0 і xfce-base/libxfce4ui-4.9.0, встановив їх і тепер іконки залишаються на місці.', 'Причина оновити Xfce до версії 4.10', 'x11'),
(1333876844, '<p>Знайти усі файли, які місять певне слово, можна лише одною короткою командою:</p><div class="code">$ grep -rl ''що_шукаємо'' /шлях</div>', 'Знайти файли зі вмістом', 'linux'),
(1336159209, '<p>Є багато комп’ютерних ігор, в які можна грати по мережі лише або пройшовши авторизацію на головному сайті гри, або в локальній мережі. Тобто немає можливості вручну прописати IP адресу серверу, до якого хочемо підключитись — можна лише вибрати зі списку серверів з локальної мережі, які гра знаходить. Це такі ігри, наприклад, як Rainbow six: Raven shield, Delta force: Black hawk down і багато інших.</p><p>Захотілось мені пограти одну з таких ігор з моїм другом. Купувати гру <s>можливості</s> бажання немає, а в одній локальній мережі фактично ми не знаходимось. Тому для того, щоб пограти, потрібно було створити віртуальну локальну мережу (VPN). Для цієї цілі спочатку думали скористатись Hamachi, але воно не підійшло, бо роздає IP адреси з різних сегментів. Потім спробували Wippien, але не вийшло — не розібрались. І тоді ми вирішили скористатись серйозним інструментом — OpenVPN.</p><p>Спочатку ми налаштували OpenVPN в режимі тунелю — віртуальна мережа створювалась, адреси пінгувались, але... ігровий сервер не відображувався в списку в грі. Я на джентушному форумі спитав і мені відповіли. Сказали, що я маю використовувати tap пристрій замість tun, і також переналаштуванти OpenVPN з режиму роутера в режим моста, бо список локальних серверів гра отримує через broadcast. І вони виявлись праві. Ми налаштували OpenVPN таким чином:</p><p>сервер:</p><div class="code">port 1194 <span class="comment"># стандартний OpenVPN, можна було й не писати<br /></span>proto udp <span class="comment"># Працювати по протоколу UDP<br /></span>dev tap0 <span class="comment"># L2 тунель<br /></span>comp-lzo <span class="comment"># використовувати стиснення<br /></span>tun-mtu 1500 <span class="comment"># максимальний розмір MTU<br /></span>server-bridge 192.168.0.1 255.255.255.0 192.168.0.33 192.168.0.254 <span class="comment"># Характерно для режиму моста<br /></span>ca ca.crt <span class="comment"># кореневий сертифікат<br /></span>cert server.crt <span class="comment"># сертифікат серверу<br /></span>key server.key <span class="comment"># секретний ключ серверу<br /></span>dh dh1024.pem <span class="comment"># файл, який містить відізвані сертифікати<br /></span>persist-key <span class="comment"># при перезапуску тунелю не перечитувати ключі<br /></span>persist-tun <span class="comment"># при перезапуску OpenVPN залишати пристрої tun/tap без змін<br /></span>client-to-client <span class="comment"># можливість з’єднуватись клієнтам між собою, а не тільки з сервером<br /></span>ifconfig 192.168.0.2 255.255.255.0 <span class="comment"># 192.168.0.2 — IP адреса комп’ютера з сервером у цій віртуальній локальній мережі<br /></span></div><p>клієнт:</p><div class="code">client <span class="comment"># Це — клієт.<br /></span>proto udp <span class="comment"># Працювати по протоколу UDP<br /></span>port 1194 <span class="comment"># стандартний порт OpenVPN<br /></span>remote 111.111.111.111 <span class="comment"># IP адреса OpenVPN серверу<br /></span>dev tap <span class="comment"># L2 тунель<br /></span>nobind <span class="comment"># використовувати динамічний порт для клієнта<br /></span>tun-mtu 1500 <span class="comment"># максимальний розмір MTU<br /></span>ping 10 <span class="comment"># вказуємо надсилати ping на віддалений кінець тунелю після 10 секунд якщо по тунелю не передавалось ніякого трафіку<br /></span>persist-key <span class="comment"># при перезапуску тунелю не перечитувати ключі<br /></span>persist-tun <span class="comment"># при перезапуску OpenVPN залишати пристрої tun/tap без змін<br /></span>ca ca.crt <span class="comment"># кореневий сертифікат<br /></span>cert client.crt <span class="comment"># сертифікат цього клієнта<br /></span>key client.key <span class="comment"># ключ клієнта<br /></span></div><p>І тепер коли хтось один із нас створює сервер, інший бачить його в списку локальних серверів у грі і ми можемо грати.</p>', 'OpenVPN для ігор', 'networking'),
(1337674692, '<p>В X.org сервері вимкнути монітор можна командою:</p><div class="code">$ xset dpms force off</div><p>Вмикається монітор після такого вимкнення рухом миші чи натисненням будь-якої клавіші.</p><p>Також можна скористатися іншою командою:</p><div class="code"># vbetool dpms off</div><p>Повернути до життя після цієї команди монітор можна, перейшовши у термінал (Ctrl+Alt+F*) або за допомогою команди:</p><div class="code"># vbetool dpms on</div>', 'Вимкнути монітор в X-сервері', 'x11'),
(1341068410, '<p>Вирішив я вивчити мову програмування Java.</p><p>Для початку встановив dev-java/icedtea-bin в моєму Gentoo. Далі створив файл HelloWorld.java зі вмістом:</p><div class="code">public class HelloWorld {<br />&#09;public static void main(String[] args) {<br />&#09;&#09;System.out.println("Hello world!");<br />&#09;}<br />}</div><p>Скомпілював програмку:</p><div class="code">$ javac ./HelloWorld.java</div><p>І запустив:</p><div class="code">$ java HelloWorld</div><p>й отримав:</p><div class="code">Hello world!</div><p>Хочу зауважити, що в результаті компіляції створився файл "HelloWorld.class", а не "HelloWorld". І також, що ім’я класу і файлу має бути одне і те ж, інакше — видасть помилку:</p><div class="code">HelloWorld is public, should be declared in a file named HelloWorld.java</div>', 'Перше знайомство із Java', 'java'),
(1341468936, '<p>Запускати команди операційної системи в Java можна, наприклад, за допомогою такої конструкції:</p><div class="code">import java.io.*;<br /><br />public class launcher {<br /><br />public static void main(String args[]) {<br />}<br /><br />public static String exe (String a) { <span class="comment">// Метод для виконання зовнішніх команд (команд операційної системи).<br /></span>&#09;try { <span class="comment">// Варто зазначити, що можна виконувати лише по одній команді, тобто "&amp;&amp;" оболонки bash не працює.<br /></span>&#09;&#09;String text = "<span class="lapky"></span>";<br />&#09;&#09;Process child = Runtime.getRuntime().exec(a); <span class="comment">// Виконання команди.<br /></span>&#09;&#09;InputStream in = child.getInputStream(); <span class="comment">// Зчитування вхідного потоку.<br /></span>&#09;&#09;BufferedReader ins = new BufferedReader(new InputStreamReader(in));<br />&#09;&#09;String str;<br />&#09;&#09;while ((str = ins.readLine()) != null)  <span class="comment">// Порядкове зчитування виводу команди в змінну.<br /></span>&#09;&#09;{<br />&#09;&#09;&#09;text += str;<br />&#09;&#09;}<br />&#09;&#09;return text; <span class="comment">// Видача виводу команди.<br /></span>&#09;}<br />&#09;catch (IOException e) { <span class="comment">// Якщо команду не вдалось виконати.<br /></span>&#09;&#09;return ("<span class="lapky">Команду ''</span>" + a + "<span class="lapky">'' не вдалось виконати. Кінець.</span>");<br />&#09;}<br />}<br /><br />}</div>', 'Запуск зовнішніх команд в Java', 'java'),
(1341467504, '<div class="code">public class a {<br />&#09;public static void main (String[] args) {<br />&#09;&#09;class c1 {<br />&#09;&#09;&#09;public void d () {<br />&#09;&#09;&#09;&#09;System.out.println("<span class="lapky">from d</span>");<br />&#09;&#09;&#09;}<br />&#09;&#09;}<br />&#09;&#09;class c2 extends c1 {<br />&#09;&#09;&#09;public void e () {<br />&#09;&#09;&#09;&#09;System.out.println("<span class="lapky">from e</span>");<br />&#09;&#09;&#09;}<br />&#09;&#09;}<br />&#09;&#09;c2 debbi = new c2();<br />&#09;&#09;debbi.e();<br />&#09;&#09;debbi.d();<br />&#09;}<br />}</div>', 'Java — успадковування класів', 'java'),
(1342013372, '<p>Раніше я на Пайтоні написав програму, яка форматує звичайних код у формат HTML. Тепер я написав схожу програму на Java. Багато розказувати не буду, в коді є коментарі, по яких зрозуміло як саме програма обробляє текст. Хочу лише зауважити, що первинна розробка на Пайтоні у мене забрала менше часу, але коли треба було щось доробити, то це займає менше часу на Java. Але мені важко сказати, пов’язано це з моїм особистим досвідом програмування чи відмінностями між мовами. Власне, сама програма:</p><div class="code"><span class="comment">// html.java — скрипт для форматування тексту для HTML.</span><br />import java.io.*;<br /><br />public class html {<br />public static void main(String args[]) {<br /><br />byte mode = 0; <span class="comment">// Оголошення змінної mode, яка зі значенням 0 означатиме розширене форматування, а зі 1 — просте.</span><br /><br />if (args.length == 0) { <span class="comment">// Якщо не вказано ніяких параметрів програмі у командному рядку.</span><br />&#09;mode = 0;<br />}<br />else if (args[0].equals("<span class="lapky">-h</span>") || args[0].equals("<span class="lapky">--help</span>")) { <span class="comment">// Якщо в першому параметрі командного рядка</span><br />&#09;System.out.println("<span class="lapky">Це програма для обробки коду для вставки його в html.</span>"); <span class="comment">// "-h" або "--help".</span><br />&#09;System.out.println("<span class="lapky">Вхідний код вона зчитує з файлу in.txt.</span>");<br />&#09;System.out.println("<span class="lapky">Якщо не хочете розширеного форматування коду, використовуйте наступну опцію:</span>");<br />&#09;System.out.println("<span class="lapky">  -p</span>");<br />&#09;System.exit(1); <span class="comment">// Якщо виведена довідка, то кінець роботи програми.</span><br />} <br />else if (args[0].equals("<span class="lapky">-p</span>")) { <span class="comment">// Якщо користувач захотів просте форматування коду.</span><br />&#09;mode = 1;<br />}<br />else { <span class="comment">// Якщо щось інакше, то це явно щось не те.</span><br />&#09;System.out.println("<span class="lapky">Неправильний ввід. Для виводу довідки запустіть програму із параметром ''-h''.</span>");<br />&#09;System.exit(1);<br />}<br /><br />char[] intext = new char[0]; <span class="comment">// В змінній intext має бути масив символів вхідного тексту.</span><br />try {<br />&#09;String input = "<span class="lapky"></span>"; <span class="comment">// Оголошення змінної для зберігання вхідного тексту.</span><br />&#09;BufferedReader infile = new BufferedReader(new FileReader("<span class="lapky">in.txt</span>")); <span class="comment">// Отримання потоку і буферизація.</span><br />&#09;String str; <span class="comment">// Створення змінної для рядка.</span><br />&#09;while ((str = infile.readLine()) != null) { <span class="comment">// Порядковий перебір вмісту файла.</span><br />&#09;&#09;input += str; <span class="comment">// Порядкове зчитування вмісту файлу в рядкову змінну input.</span><br />&#09;&#09;input += "<span class="lapky">\n</span>"; <span class="comment">// Додавання символу переносу рядка.</span><br />&#09;}<br />&#09;intext = input.toCharArray(); <span class="comment">// Розбиття рядка на масив символів.</span><br />}<br />catch (IOException e) { <span class="comment">// Якщо не вдалося відкрити файл in.txt.</span><br />&#09;System.out.println("<span class="lapky">Не вдалося відкрити файл in.txt. Кінець роботи програми.</span>");<br />&#09;System.exit(1);<br />}<br /><br />class obrobka { <span class="comment">// Створення класу для обробки звичайного тексту в html.</span><br /><br />	char[] intext = new char[0]; <span class="comment">// Другий масив з ім’ям intext. Вміст буде такий же, як і в першого intext.</span><br />&#09;String[] tags = new String[0]; <span class="comment">// Масив для зберігання html-тегів.</span><br />&#09;String[] symbols = new String[0]; <span class="comment">// Масив для зберігання символів для вставки в html.</span><br /><br />	void announce (char[] source) { <span class="comment">// Метод для отримання масиву символів вхідного тексту.</span><br />&#09;&#09;intext = source; <span class="comment">// По суті — копіювання змінної intext всередину класу.</span><br />&#09;&#09;tags = new String[intext.length + 1]; <span class="comment">// Ініціалізація масиву tags. Він більший на 1 елемент за symbols, бо в кінці може бути закриваючий тег.</span><br />&#09;&#09;for (int i = 0; i &lt; tags.length; i++) tags[i] = "<span class="lapky"></span>";<span class="comment">// Наповнення масиву tags порожніми рядками.</span><br />&#09;&#09;symbols = new String[intext.length]; <span class="comment">// Ініціалізація масиву symbols.</span><br />&#09;&#09;for(int i = 0; i &lt; intext.length; i++) { <span class="comment">// Перетвореня масиву символів в масив рядків.</span><br />&#09;&#09;&#09;symbols[i] = intext[i] + "<span class="lapky"></span>"; <span class="comment">// Поелементне копіювання.</span><br />&#09;&#09;}<br />&#09;}<br /><br />	void poch () { <span class="comment">// Метод для заміни символів пробілів і табуляцій на початку рядків на відповідні їм html позначення.</span><br />&#09;&#09;int poch = 1; <span class="comment">// Значення 1 означає, що початок рядку, 0 — уже ні.</span><br />&#09;&#09;for (int i = 0; i &lt; symbols.length; i++) { <span class="comment">// Посимвольна оброка.			</span><br />&#09;&#09;&#09;if (poch == 1) { <span class="comment">// Якщо ще початок рядку.</span><br />&#09;&#09;&#09;&#09;if (intext[i] == 32) { <span class="comment">// 32 — код символу пробілу. Якщо пробіл то</span><br />&#09;&#09;&#09;&#09;&#09;symbols[i] = "<span class="lapky">&amp;nbsp;</span>"; <span class="comment">// він заміняється на відповідний спец.символ в HTML.</span><br />&#09;&#09;&#09;&#09;}<br />&#09;&#09;&#09;&#09;else if (intext[i] == 9) { <span class="comment">// 9 — код символу горизонтальної табуляції. Якщо це він, то </span><br />&#09;&#09;&#09;&#09;&#09;symbols[i] = "<span class="lapky">&amp;#09;</span>"; <span class="comment">// він теж заміняється на відповідний спец.символ в HTML.</span><br />&#09;&#09;&#09;&#09;}<br />&#09;&#09;&#09;&#09;else { <span class="comment">// Якщо інакший символ, то це вже не початок рядку.</span><br />&#09;&#09;&#09;&#09;&#09;poch = 0;<br />&#09;&#09;&#09;&#09;}<br />&#09;&#09;&#09;}<br />&#09;&#09;&#09;else {<br />&#09;&#09;&#09;&#09;if (intext[i] == 10) { <span class="comment">// Якщо перенос рядку, то далі буде початок рядку.</span><br />&#09;&#09;&#09;&#09;&#09;poch = 1;<br />&#09;&#09;&#09;&#09;}<br />&#09;&#09;&#09;}<br />&#09;&#09;&#09;<span class="comment">// Якщо вже не початок рядку, то символ залишається без змін.</span><br />&#09;&#09;}<br />&#09;}<br />&#09;<br />	void br () { <span class="comment">// Метод для заміни переносів рядків на теги &lt;br /&gt;.</span><br />&#09;&#09;for (int i = 0; i &lt; symbols.length; i++) {<br />&#09;&#09;&#09;if (intext[i] == 10) { <span class="comment">// Якщо це символ переносу рядка.</span><br />&#09;&#09;&#09;&#09;tags[i + 1] += "<span class="lapky">&lt;br /&gt;</span>"; <span class="comment">// Вставка тегу, який в html означає перенос рядка.</span><br />&#09;&#09;&#09;&#09;symbols[i] = "<span class="lapky"></span>"; <span class="comment">// Видалення символу переносу рядка.</span><br />&#09;&#09;&#09;}<br />&#09;&#09;}<br />&#09;}<br /><br />	void amp () { <span class="comment">// Метод для заміни амперсандів, а також знаків більше і менше на відповідні їм html позначення.</span><br />&#09;&#09;for (int i = 0; i &lt; symbols.length; i++) {<br />&#09;&#09;&#09;if (intext[i] == 60) { <span class="comment">// Знак "&lt;".</span><br />&#09;&#09;&#09;&#09;symbols[i] = "<span class="lapky">&amp;lt;</span>";<br />&#09;&#09;&#09;}<br />&#09;&#09;&#09;else if (intext[i] == 62) { <span class="comment">// Знак "&gt;".</span><br />&#09;&#09;&#09;&#09;symbols[i] = "<span class="lapky">&amp;gt;</span>";<br />&#09;&#09;&#09;}<br />&#09;&#09;&#09;else if (intext[i] == 38) { <span class="comment">// Знак "&amp;".</span><br />&#09;&#09;&#09;&#09;symbols[i] = "<span class="lapky">&amp;amp;</span>";<br />&#09;&#09;&#09;}<br />&#09;&#09;}<br />&#09;}<br />&#09;<br />	void code () { <span class="comment">// Метод для обраблення всього вихідного тексту в тег &lt;div class="code"&gt;</span><br />&#09;&#09;tags[0] = "<span class="lapky">&lt;div class="code"&gt;</span>" + tags[0];<br />&#09;&#09;tags[tags.length - 1] += "<span class="lapky">&lt;/div&gt;</span>";<br />&#09;}<br />&#09;<br />	void lk () { <span class="comment">// Метод для обробки тексту в лапках і коментарів.</span><br />&#09;&#09;int stan = 0; <span class="comment">// Значення 0 — просто код, 1 — однорядковий коментар відкрито, 2 — багаторядковий коментар відкрито, 3 — одинарні лапки відкрито, 4 — подвійні лапки відкрито.</span><br />&#09;&#09;for (int i = 0; i &lt; symbols.length; i++) {<br />&#09;&#09;&#09;switch (stan) {<br />&#09;&#09;&#09;&#09;case 0:<br />&#09;&#09;&#09;&#09;&#09;if (intext[i] == 39) { <span class="comment">// Одинарні лапки.</span><br />&#09;&#09;&#09;&#09;&#09;&#09;stan = 3;<br />&#09;&#09;&#09;&#09;&#09;&#09;tags[i + 1] += "<span class="lapky">&lt;span class="lapky"&gt;</span>";<br />&#09;&#09;&#09;&#09;&#09;}<br />&#09;&#09;&#09;&#09;&#09;else if (intext[i] == 34) { <span class="comment">// Подвійні лапки.</span><br />&#09;&#09;&#09;&#09;&#09;&#09;stan = 4;<br />&#09;&#09;&#09;&#09;&#09;&#09;tags[i + 1] += "<span class="lapky">&lt;span class="lapky"&gt;</span>";<br />&#09;&#09;&#09;&#09;&#09;}<br />&#09;&#09;&#09;&#09;&#09;else if (intext[i] == 47) { <span class="comment">// Слеш.</span><br />&#09;&#09;&#09;&#09;&#09;&#09;if (intext[i + 1] == 47) { <span class="comment">// Якщо наступний символ — теж слеш.</span><br />&#09;&#09;&#09;&#09;&#09;&#09;&#09;stan = 1;<br />&#09;&#09;&#09;&#09;&#09;&#09;&#09;tags[i] += "<span class="lapky">&lt;span class="comment"&gt;</span>";<br />&#09;&#09;&#09;&#09;&#09;&#09;&#09;i += 1; <span class="comment">// Пропускаємо наступний символ, так як він нам уже відомий.</span><br />&#09;&#09;&#09;&#09;&#09;&#09;}<br />&#09;&#09;&#09;&#09;&#09;&#09;else if (intext[i + 1] == 42) { <span class="comment">// Зірочка.</span><br />&#09;&#09;&#09;&#09;&#09;&#09;&#09;stan = 2;<br />&#09;&#09;&#09;&#09;&#09;&#09;&#09;tags[i] += "<span class="lapky">&lt;span class="comment"&gt;</span>";<br />&#09;&#09;&#09;&#09;&#09;&#09;&#09;i += 1;<br />&#09;&#09;&#09;&#09;&#09;&#09;}<br />&#09;&#09;&#09;&#09;&#09;}<br />&#09;&#09;&#09;&#09;&#09;break;<br />&#09;&#09;&#09;&#09;case 1: <span class="comment">// Якщо однорядковий коментар, то він закінчується перед переносом рядка.</span><br />&#09;&#09;&#09;&#09;&#09;if (intext[i] == 10) {<br />&#09;&#09;&#09;&#09;&#09;&#09;stan = 0;<br />&#09;&#09;&#09;&#09;&#09;&#09;tags[i] += "<span class="lapky">&lt;/span&gt;</span>";<br />&#09;&#09;&#09;&#09;&#09;}<br />&#09;&#09;&#09;&#09;&#09;break;<br />&#09;&#09;&#09;&#09;case 2:<br />&#09;&#09;&#09;&#09;&#09;if (intext[i] == 42) { <span class="comment">// Зірочка.</span><br />&#09;&#09;&#09;&#09;&#09;&#09;if (intext[i + 1] == 47) { <span class="comment">// Наступний символ — слеш.</span><br />&#09;&#09;&#09;&#09;&#09;&#09;&#09;stan = 0;<br />&#09;&#09;&#09;&#09;&#09;&#09;&#09;tags[i] += "<span class="lapky">&lt;/span&gt;</span>";<br />&#09;&#09;&#09;&#09;&#09;&#09;}<br />&#09;&#09;&#09;&#09;&#09;}<br />&#09;&#09;&#09;&#09;&#09;break;<br />&#09;&#09;&#09;&#09;case 3: <span class="comment">// Одинарні лапки закриваються лише такими самими як вони.</span><br />&#09;&#09;&#09;&#09;&#09;if (intext[i] == 92) { <span class="comment">// Якщо бекслеш (""), то пропускаємо цей і наступний символи.</span><br />&#09;&#09;&#09;&#09;&#09;&#09;i += 1;<br />&#09;&#09;&#09;&#09;&#09;}<br />&#09;&#09;&#09;&#09;&#09;else if (intext[i] == 39) {<br />&#09;&#09;&#09;&#09;&#09;&#09;stan = 0;<br />&#09;&#09;&#09;&#09;&#09;&#09;tags[i] += "<span class="lapky">&lt;/span&gt;</span>";<br />&#09;&#09;&#09;&#09;&#09;}<br />&#09;&#09;&#09;&#09;&#09;break;<br />&#09;&#09;&#09;&#09;case 4: <span class="comment">// Подвійні лапки теж закриваються лише такими самими як вони.</span><br />&#09;&#09;&#09;&#09;&#09;switch (intext[i]) {<br />&#09;&#09;&#09;&#09;&#09;&#09;case 92: <span class="comment">// Якщо бекслеш (""), то пропускаємо цей і наступний символи.</span><br />&#09;&#09;&#09;&#09;&#09;&#09;&#09;i += 1;<br />&#09;&#09;&#09;&#09;&#09;&#09;&#09;break;<br />&#09;&#09;&#09;&#09;&#09;&#09;case 34:<br />&#09;&#09;&#09;&#09;&#09;&#09;&#09;stan = 0;<br />&#09;&#09;&#09;&#09;&#09;&#09;&#09;tags[i] += "<span class="lapky">&lt;/span&gt;</span>";<br />&#09;&#09;&#09;&#09;&#09;}<br />&#09;&#09;&#09;&#09;&#09;break;<br />&#09;&#09;&#09;}<br />&#09;&#09;}<br />&#09;}<br /><br />	String out () { <span class="comment">// Компоновка і видача відформатованого тексту.</span><br />&#09;&#09;String outtext = "<span class="lapky"></span>"; <span class="comment">// Оголошення змінної для вихідного тексту.</span><br />&#09;&#09;for(int i = 0; i &lt; symbols.length; i++){<br />&#09;&#09;&#09;outtext += tags[i] + symbols[i];<br />&#09;&#09;}<br />&#09;&#09;outtext += tags[tags.length - 1]; <span class="comment">// Останній елемент масиву tags.</span><br />&#09;&#09;return outtext; <span class="comment">// Видача відформатованого тексту.</span><br />&#09;}<br />}<br /><br />obrobka obr = new obrobka(); <span class="comment">// Створення екземпляру класу obrobka, це буде єдиний екземпляр цього класу.</span><br />obr.announce(intext); <span class="comment">// Введення вхідного тексту у екземпляр obr класу obrobka.</span><br /><br />if (mode == 0) { <span class="comment">// Якщо розширене форматування.</span><br />&#09;obr.poch();<br />&#09;obr.br();<br />&#09;obr.amp();<br />&#09;obr.lk();<br />&#09;obr.code();<br />}<br />else if (mode == 1) { <span class="comment">// Якщо просте форматування.</span><br />&#09;obr.poch();<br />&#09;obr.br();<br />&#09;obr.amp();<br />}<br /><br />System.out.println(obr.out()); <span class="comment">// Виведення відформатованого html тексту.</span><br /><br />}<br />}<br /></div>\r\n', 'Java: обробка тексту для html', 'java'),
(1342616412, '<p>Приведу приклад використання інтерфейсу в Java.</p><div class="code">interface gun {<br />&#09;void fire ();<br />}<br /><br />class test {<br />&#09;public static void main(String args[]) {<br />&#09;&#09;grenade granata = new grenade();<br />&#09;&#09;machine_gun kulemet = new machine_gun();<br />&#09;&#09;gun oruzhka;<br />&#09;&#09;oruzhka = granata;<br />&#09;&#09;oruzhka.fire();<br />&#09;&#09;oruzhka = kulemet;<br />&#09;&#09;oruzhka.fire();<br />&#09;}<br />}<br /><br />class grenade implements gun {<br />&#09;public void fire () {<br />&#09;&#09;System.out.println("<span class="lapky">бум</span>");<br />&#09;}<br />}<br /><br />class machine_gun implements gun {<br />&#09;public void fire () {<br />&#09;&#09;System.out.println("<span class="lapky">тра-та-та</span>");<br />&#09;}<br />}<br /></div><p>Програма виведе: "бум", а потім "тра-та-та", тобто одною і тою ж командою "oruzhka.fire();" в одній і тій самій області видимості можна пропрацьовувати методи з різних класів, які "добровільно підписалися" на певний інтерфейс і тепер повинні реалізовувати його методи.</p>\r\n', 'Java: приклад використання інтерфейсу', 'java'),
(1342638663, 'Наведу простий приклад створення, видачі і піймання виключення в Java.<div class="code">class ab extends Exception { <span class="comment">// My own exception</span><br />&#09;public ab () {}<br />&#09;public ab (String msg) {<br />&#09;&#09;super(msg);<br />&#09;}<br />}<br /><br />class a {<br />&#09;public static void main(String args[]) {<br />&#09;&#09;<br />int a1 = 12;<br />int a2 = 0;<br /><br />Exception ab = new Exception();<br /><br />try {<br />&#09;if (a2 == 0) {<br />&#09;&#09;throw new ab("<span class="lapky">exception message</span>");<br />&#09;}<br />}<br />catch (Exception e) {<br />&#09;e.printStackTrace();<br />}<br /><br />}<br />}<br /></div>\r\n', 'Java: створити нове виключення', 'java'),
(1342729723, '<p>Є програма:</p><div class="code">package mypack;<br /><br />class thread1 implements Runnable {<br />&#09;public void run () {<br />&#09;&#09;try {<br />&#09;&#09;&#09;Thread.sleep(1500);<br />&#09;&#09;&#09;System.out.println("<span class="lapky">Повідомлення з дочірнього потоку.</span>");<br />&#09;&#09;}<br />&#09;&#09;catch (InterruptedException e) { }<br />&#09;}<br />}<br /><br /><br />class a {<br />&#09;public static void main(String args[]) {<br />&#09;&#09;thread1 ku = new thread1();<br />&#09;&#09;Thread t1 = new Thread (ku,"<span class="lapky">опис потоку</span>");<br />&#09;&#09;t1.start();<br />&#09;&#09;System.out.println("<span class="lapky">Повідомлення з головного потоку.</span>");<br />}<br />}<br /></div><p>, яка спочатку виводить "повідомлення з головного потоку", а через півтори секунди — "повідомлення з дочірнього потоку". Тобто це простенький приклад реалізації багатопоточності в Java. Так от, роздумуючи про те, чому методу "Thread" не можна скормити об’єкт, який не реалізує інтерфейс "Runnable", я зрозумів, що клас "Thread" має якось прийняти до себе цей об’єкт. А, приймаючи його, він має знати який тип об’єкта він приймає. Тому метод "Thread" приймає об’єкт завжди у формі "Runnable". А щоб це було можливим, об’єкт має реалізовувати даний інтерфейс. Тобто метод "Thread" приймає об’єкт лише у межах інтерфейсу "Runnable".', 'Роздуми про значення інтерфейсів в Java', 'java');
INSERT INTO `posts` (`time`, `text`, `zagolovok`, `cate`) VALUES
(1343858457, '<p>Я переробив свою програмку — зробив її більш ООПною і додав метод для заміни бекслеша на 2 бекслеші.</p><div class="code">import java.io.BufferedReader;<br />import java.io.FileReader;<br />import java.io.IOException;<br /><br />public class html {<br />&#09public static void main(String[] args) {<br />&#09&#09byte mode = 0; <span class="comment">// Оголошення змінної mode, яка зі значенням 0 означатиме розширене форматування, а зі 1 — просте.</span><br />&#09&#09<br />		if (args.length == 0) { <span class="comment">// Якщо не вказано ніяких параметрів програмі у командному рядку.</span><br />&#09&#09&#09mode = 0;<br />&#09&#09}<br />&#09&#09else if (args[0].equals(<span class="lapky">"-h"</span>) || args[0].equals(<span class="lapky">"--help"</span>)) { <span class="comment">// Якщо в першому параметрі командного рядка</span><br />&#09&#09&#09System.out.println(<span class="lapky">"Це програма для обробки коду для вставки його в html."</span>); <span class="comment">// "-h" або "--help".</span><br />&#09&#09&#09System.out.println(<span class="lapky">"Вхідний код вона зчитує з файлу in.txt."</span>);<br />&#09&#09&#09System.out.println(<span class="lapky">"Якщо не хочете розширеного форматування коду, використовуйте наступну опцію:"</span>);<br />&#09&#09&#09System.out.println(<span class="lapky">"  -p"</span>);<br />&#09&#09&#09System.exit(1); <span class="comment">// Якщо виведена довідка, то кінець роботи програми.</span><br />&#09&#09} <br />&#09&#09else if (args[0].equals(<span class="lapky">"-p"</span>)) { <span class="comment">// Якщо користувач захотів просте форматування коду.</span><br />&#09&#09&#09mode = 1;<br />&#09&#09}<br />&#09&#09else { <span class="comment">// Якщо щось інакше, то це явно щось не те.</span><br />&#09&#09&#09System.out.println(<span class="lapky">"Неправильний ввід. Для виводу довідки запустіть програму із параметром ''-h''."</span>);<br />&#09&#09&#09System.exit(1);<br />&#09&#09}<br />&#09&#09<br />		String input = <span class="lapky">""</span>; <span class="comment">// Оголошення змінної для зберігання вхідного тексту.</span><br />&#09&#09try {<br />&#09&#09&#09BufferedReader infile = new BufferedReader(new FileReader(<span class="lapky">"in.txt"</span>)); <span class="comment">// Отримання потоку і буферизація.</span><br />&#09&#09&#09String str; <span class="comment">// Створення змінної для рядка.</span><br />&#09&#09&#09while ((str = infile.readLine()) != null) { <span class="comment">// Порядковий перебір вмісту файла.</span><br />&#09&#09&#09&#09input += str; <span class="comment">// Порядкове зчитування вмісту файлу в рядкову змінну input.</span><br />&#09&#09&#09&#09input += <span class="lapky">"\\n"</span>; <span class="comment">// Додавання символу переносу рядка.</span><br />&#09&#09&#09}<br />&#09&#09&#09infile.close();<br />&#09&#09}<br />&#09&#09catch (IOException e) { <span class="comment">// Якщо не вдалося відкрити файл in.txt.</span><br />&#09&#09&#09System.out.println(<span class="lapky">"Не вдалося відкрити файл in.txt. Кінець роботи програми."</span>);<br />&#09&#09&#09System.exit(0);<br />&#09&#09}<br />&#09&#09text text1 = new text(input);<br />&#09&#09processing obrobka = new processing();<br />&#09&#09if (mode == 0) { <span class="comment">// Якщо розширене форматування.</span><br />&#09&#09&#09obrobka.poch(text1);<br />&#09&#09&#09obrobka.br(text1);<br />&#09&#09&#09obrobka.amp(text1);<br />&#09&#09&#09obrobka.code(text1);<br />&#09&#09&#09obrobka.lk(text1);<br />&#09&#09&#09obrobka.backslash(text1);<br />&#09&#09}<br />&#09&#09else if (mode == 1) { <span class="comment">// Якщо просте форматування.</span><br />&#09&#09&#09obrobka.poch(text1);<br />&#09&#09&#09obrobka.br(text1);<br />&#09&#09&#09obrobka.amp(text1);<br />&#09&#09}<br />&#09&#09System.out.println(text1.outtext());<span class="comment">// Виведення відформатованого тексту.</span><br />&#09}<br />}<br /><br />interface Itext { <span class="comment">// Інтерфес для об’єктів, які мають бути оброблені.</span><br />&#09char get_symbol(int i); <span class="comment">// Метод для отримання певного символу.</span><br />&#09void change_symbol(int i, String s); <span class="comment">// Метод для заміни певного символу.</span><br />&#09void add_tag(int i, String s, boolean end); <span class="comment">// Метод для додавання певного тегу.</span><br />&#09void add_tag(int i, String s);<br />&#09int dov(); <span class="comment">// Метод для видачі змінної із довжиною тексту.</span><br />&#09String outtext();<span class="comment">// Метод для виводу відформатованого тексту.</span><br />}<br /><br />class text implements Itext {<br />&#09private String intext; <span class="comment">// Змінна для зберігання вхідного тексту.</span><br />&#09private String[] tags; <span class="comment">// Змінна для зберігання тегів html.</span><br />&#09private String[] symbols; <span class="comment">// Змінна для зберігання змінених символів.</span><br />&#09text (String s) { <span class="comment">// Виконується при стоворенні екземпляру класу</span><br />&#09&#09this.intext = s; <span class="comment">// для введення вхідного тексту.</span><br />&#09&#09tags = new String[intext.length()+1]; <span class="comment">// Масив "tags" має бути на один елемент більший за масив "symbols".</span><br />&#09&#09symbols = new String[intext.length()];<br />&#09&#09for (int i = 0; i &lt; intext.length(); i++) { <br />&#09&#09&#09tags[i] = <span class="lapky">""</span>; <span class="comment">// Наповнення масиву "tags" порожніми рядками.</span><br />&#09&#09&#09symbols[i] = intext.charAt(i) + <span class="lapky">""</span>; <span class="comment">// Наповнення масиву символів початковими значеннями.</span><br />&#09&#09}<br />&#09&#09tags[tags.length-1] = <span class="lapky">""</span>; <span class="comment">// Заповнення останнього елемента масиву tags порожнім рядком.</span><br />&#09}<br />&#09public int dov() {<br />&#09&#09return intext.length(); <span class="comment">// Видача довжини тексту.</span><br />&#09}<br />&#09public char get_symbol(int i) { <span class="comment">// Отримання певного символу із рядка.</span><br />&#09&#09return intext.charAt(i);<br />&#09}<br />&#09public void change_symbol(int i, String s) { <span class="comment">// Заміна символу.</span><br />&#09&#09this.symbols[i] = s;<br />&#09}<br />&#09public void add_tag(int i, String s, boolean end) { <span class="comment">// Додавання певного тегу.</span><br />&#09&#09if (end == true) { <span class="comment">// Якщо має іти далі.</span><br />&#09&#09&#09this.tags[i] = this.tags[i] + s;<br />&#09&#09}<br />&#09&#09else { <span class="comment">// Якщо цей тег має бути поближче до початку.</span><br />&#09&#09&#09this.tags[i] = s + this.tags[i];<br />&#09&#09}<br />&#09}<br />&#09public void add_tag(int i, String s) { <span class="comment">// За замовчуванням тег буде додаватись ближче по початку.</span><br />&#09&#09this.tags[i] += s;<br />&#09}<br />&#09public String outtext() { <span class="comment">// Метод для виводу відформатованого тексту.</span><br />&#09&#09String text = <span class="lapky">""</span>;<br />&#09&#09for(int i = 0; i &lt; intext.length(); i++) {<br />&#09&#09&#09text += tags[i] + symbols[i]; <span class="comment">// Додавання відповідного тегу + символу.</span><br />&#09&#09}<br />&#09&#09text += tags[tags.length-1]; <span class="comment">// Додавання останнього тегу.</span><br />&#09&#09return text; <span class="comment">// Видача тексту.</span><br />&#09}<br />}<br /><br />class processing { <span class="comment">// Клас для обробки тексту.</span><br />&#09void poch (Itext obj) { <span class="comment">// Метод для заміни символів пробілів і табуляцій на початку рядків на відповідні їм html позначення.</span><br />&#09&#09int poch = 1; <span class="comment">// Значення 1 означає, що початок рядку, 0 — уже ні.</span><br />&#09&#09for (int i = 0; i &lt; obj.dov(); i++) { <span class="comment">// Посимвольна оброка.			</span><br />&#09&#09&#09if (poch == 1) { <span class="comment">// Якщо ще початок рядку.</span><br />&#09&#09&#09&#09if (obj.get_symbol(i) == 32) { <span class="comment">// 32 — код символу пробілу. Якщо пробіл то</span><br />&#09&#09&#09&#09&#09obj.change_symbol(i,<span class="lapky">"&amp;nbsp;"</span>); <span class="comment">// він заміняється на відповідний спец.символ в HTML.</span><br />&#09&#09&#09&#09}<br />&#09&#09&#09&#09else if (obj.get_symbol(i) == 9) { <span class="comment">// 9 — код символу горизонтальної табуляції. Якщо це він, то </span><br />&#09&#09&#09&#09&#09obj.change_symbol(i,<span class="lapky">"&amp;#09"</span>); <span class="comment">// він теж заміняється на відповідний спец.символ в HTML.</span><br />&#09&#09&#09&#09}<br />&#09&#09&#09&#09else { <span class="comment">// Якщо інакший символ, то це вже не початок рядку.</span><br />&#09&#09&#09&#09&#09poch = 0;<br />&#09&#09&#09&#09}<br />&#09&#09&#09}<br />&#09&#09&#09else {<br />&#09&#09&#09&#09if (obj.get_symbol(i) == 10) { <span class="comment">// Якщо перенос рядку, то далі буде початок рядку.</span><br />&#09&#09&#09&#09&#09poch = 1;<br />&#09&#09&#09&#09}<br />&#09&#09&#09}<br />&#09&#09&#09<span class="comment">// Якщо вже не початок рядку, то символ залишається без змін.</span><br />&#09&#09}<br />&#09}<br />&#09void br (Itext obj) { <span class="comment">// Метод для заміни переносів рядків на теги &lt;br /&gt;.</span><br />&#09&#09for (int i = 0; i &lt; obj.dov(); i++) {<br />&#09&#09&#09if (obj.get_symbol(i) == <span class="lapky">''\\n''</span>) { <span class="comment">// Якщо це символ переносу рядка.</span><br />&#09&#09&#09&#09obj.add_tag(i+1,<span class="lapky">"&lt;br /&gt;"</span>,true); <span class="comment">// Вставка тегу, який в html означає перенос рядка.</span><br />&#09&#09&#09&#09obj.change_symbol(i,<span class="lapky">""</span>); <span class="comment">// Видалення символу переносу рядка.</span><br />&#09&#09&#09}<br />&#09&#09}<br />&#09}<br />&#09void amp (Itext obj) { <span class="comment">// Метод для заміни амперсандів, а також знаків більше і менше на відповідні їм html позначення.</span><br />&#09&#09for (int i = 0; i &lt; obj.dov(); i++) {<br />&#09&#09&#09if (obj.get_symbol(i) == 60) { <span class="comment">// Знак "&lt;".</span><br />&#09&#09&#09&#09obj.change_symbol(i,<span class="lapky">"&amp;lt;"</span>);<br />&#09&#09&#09}<br />&#09&#09&#09else if (obj.get_symbol(i) == 62) { <span class="comment">// Знак "&gt;".</span><br />&#09&#09&#09&#09obj.change_symbol(i,<span class="lapky">"&amp;gt;"</span>);<br />&#09&#09&#09}<br />&#09&#09&#09else if (obj.get_symbol(i) == 38) { <span class="comment">// Знак "&amp;".</span><br />&#09&#09&#09&#09obj.change_symbol(i,<span class="lapky">"&amp;amp;"</span>);<br />&#09&#09&#09}<br />&#09&#09}<br />&#09}<br />&#09void code (Itext obj) { <span class="comment">// Метод для обраблення всього вихідного тексту в тег &lt;div class="code"&gt;</span><br />&#09&#09obj.add_tag(0,<span class="lapky">"&lt;div class=\\"code\\"&gt;"</span>, false);<br />&#09&#09obj.add_tag(obj.dov(),<span class="lapky">"&lt;/div&gt;"</span>, true);<br />&#09}<br />&#09void lk (Itext obj) { <span class="comment">// Метод для обробки тексту в лапках і коментарів.</span><br />&#09&#09int stan = 0; <span class="comment">// Значення 0 — просто код, 1 — однорядковий коментар відкрито, 2 — багаторядковий коментар відкрито, 3 — одинарні лапки відкрито, 4 — подвійні лапки відкрито.</span><br />&#09&#09for (int i = 0; i &lt; obj.dov(); i++) {<br />&#09&#09&#09switch (stan) {<br />&#09&#09&#09&#09case 0:<br />&#09&#09&#09&#09&#09if (obj.get_symbol(i) == 39) { <span class="comment">// Одинарні лапки.</span><br />&#09&#09&#09&#09&#09&#09stan = 3;<br />&#09&#09&#09&#09&#09&#09obj.add_tag(i,<span class="lapky">"&lt;span class=\\"lapky\\"&gt;"</span>, true);<br />&#09&#09&#09&#09&#09}<br />&#09&#09&#09&#09&#09else if (obj.get_symbol(i) == 34) { <span class="comment">// Подвійні лапки.</span><br />&#09&#09&#09&#09&#09&#09stan = 4;<br />&#09&#09&#09&#09&#09&#09obj.add_tag(i,<span class="lapky">"&lt;span class=\\"lapky\\"&gt;"</span>, true);<br />&#09&#09&#09&#09&#09}<br />&#09&#09&#09&#09&#09else if (obj.get_symbol(i) == 47) { <span class="comment">// Слеш.</span><br />&#09&#09&#09&#09&#09&#09if (obj.get_symbol(i+1) == 47) { <span class="comment">// Якщо наступний символ — теж слеш.</span><br />&#09&#09&#09&#09&#09&#09&#09stan = 1;<br />&#09&#09&#09&#09&#09&#09&#09obj.add_tag(i,<span class="lapky">"&lt;span class=\\"comment\\"&gt;"</span>);<br />&#09&#09&#09&#09&#09&#09&#09i += 1; <span class="comment">// Пропускаємо наступний символ, так як він нам уже відомий.</span><br />&#09&#09&#09&#09&#09&#09}<br />&#09&#09&#09&#09&#09&#09else if (obj.get_symbol(i+1) == 42) { <span class="comment">// Зірочка.</span><br />&#09&#09&#09&#09&#09&#09&#09stan = 2;<br />&#09&#09&#09&#09&#09&#09&#09obj.add_tag(i,<span class="lapky">"&lt;span class=\\"comment\\"&gt;"</span>);<br />&#09&#09&#09&#09&#09&#09&#09i += 1;<br />&#09&#09&#09&#09&#09&#09}<br />&#09&#09&#09&#09&#09}<br />&#09&#09&#09&#09&#09break;<br />&#09&#09&#09&#09case 1: <span class="comment">// Якщо однорядковий коментар, то він закінчується перед переносом рядка.</span><br />&#09&#09&#09&#09&#09if (obj.get_symbol(i) == 10) {<br />&#09&#09&#09&#09&#09&#09stan = 0;<br />&#09&#09&#09&#09&#09&#09obj.add_tag(i,<span class="lapky">"&lt;/span&gt;"</span>);<br />&#09&#09&#09&#09&#09}<br />&#09&#09&#09&#09&#09break;<br />&#09&#09&#09&#09case 2:<br />&#09&#09&#09&#09&#09if (obj.get_symbol(i) == 42) { <span class="comment">// Зірочка.</span><br />&#09&#09&#09&#09&#09&#09if (obj.get_symbol(i+1) == 47) { <span class="comment">// Наступний символ — слеш.</span><br />&#09&#09&#09&#09&#09&#09&#09stan = 0;<br />&#09&#09&#09&#09&#09&#09&#09obj.add_tag(i,<span class="lapky">"&lt;/span&gt;"</span>);<br />&#09&#09&#09&#09&#09&#09}<br />&#09&#09&#09&#09&#09}<br />&#09&#09&#09&#09&#09break;<br />&#09&#09&#09&#09case 3: <span class="comment">// Одинарні лапки закриваються лише такими самими як вони.</span><br />&#09&#09&#09&#09&#09if (obj.get_symbol(i) == 92) { <span class="comment">// Якщо бекслеш ("\\"), то пропускаємо цей і наступний символи.</span><br />&#09&#09&#09&#09&#09&#09i += 1;<br />&#09&#09&#09&#09&#09}<br />&#09&#09&#09&#09&#09else if (obj.get_symbol(i) == 39) {<br />&#09&#09&#09&#09&#09&#09stan = 0;<br />&#09&#09&#09&#09&#09&#09obj.add_tag(i+1,<span class="lapky">"&lt;/span&gt;"</span>);<br />&#09&#09&#09&#09&#09}<br />&#09&#09&#09&#09&#09break;<br />&#09&#09&#09&#09case 4: <span class="comment">// Подвійні лапки теж закриваються лише такими самими як вони.</span><br />&#09&#09&#09&#09&#09switch (obj.get_symbol(i)) {<br />&#09&#09&#09&#09&#09&#09case 92: <span class="comment">// Якщо бекслеш ("\\"), то пропускаємо цей і наступний символи.</span><br />&#09&#09&#09&#09&#09&#09&#09i += 1;<br />&#09&#09&#09&#09&#09&#09&#09break;<br />&#09&#09&#09&#09&#09&#09case 34:<br />&#09&#09&#09&#09&#09&#09&#09stan = 0;<br />&#09&#09&#09&#09&#09&#09&#09obj.add_tag(i+1,<span class="lapky">"&lt;/span&gt;"</span>);<br />&#09&#09&#09&#09&#09}<br />&#09&#09&#09&#09break;<br />&#09&#09&#09}<br />&#09&#09}<br />&#09}<br />&#09void backslash(Itext obj){<br />&#09&#09for (int i = 0; i &lt; obj.dov(); i++) {<br />&#09&#09&#09if (obj.get_symbol(i) == 92){ <span class="comment">// Якщо бекслеш,</span><br />&#09&#09&#09&#09&#09obj.change_symbol(i,<span class="lapky">"\\\\\\\\"</span>); <span class="comment">// заміна цього бекслешу на 2 бекслеші.</span><br />&#09&#09&#09}<br />&#09&#09}<br />&#09}<br />}<br /></div>\r\n', 'Java: обробка тексту для html 2', 'java'),
(1344853337, '<div class="code">String name = <span class="lapky">"class1"</span>;<br />Class c = Class.forName(name); <span class="comment">// Отримання об’єкта класу.</span><br />Object obj = c.newInstance(); <span class="comment">// Створення екземпляра класу.</span><br />actions.action action = (actions.action) obj;  <span class="comment">// Приведення екземпляра класу до типу інтерфейсу, який реалізує клас "class1".</span><br /></div>\r\n\r\n', 'Java: створити екземпляр класу з невідомим іменем', 'java'),
(1351926643, '<p>Знищити файл в Лінуксі можна командою:</p><div class="code">$ shred --remove myfile.txt</div>', 'Знищити файл', 'linux'),
(1352280462, '<b>Для того, щоб створити і запустити завдання за розкладом в Oracle Idenitity Manager 11g потрібно виконати ряд операцій.</p><p>1) Написати клас завдання:</p><div class="code">package mysystemrecon;<br /><br />import java.util.HashMap;<br /><br />public class TestReconTask extends com.thortech.xl.scheduler.tasks.SchedulerBaseTask  {<br />&nbsp;&nbsp;&nbsp;&nbsp;private String itresource;<br />&nbsp;&nbsp;&nbsp;&nbsp;public TestReconTask() {<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;super();<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br />&nbsp;&nbsp;&nbsp;&nbsp;public void execute(HashMap hashMap) {<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;try {<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(<span class="lapky">"Running the OIM Sample Scheduled Task..."</span>);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;itresource = (String)hashMap.get(<span class="lapky">"ITResource"</span>);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;} catch (NullPointerException e) {<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(this.getClass().getName() + <span class="lapky">": required parameter wasn''t set."</span>);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;throw e;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br />    }<br />&nbsp;&nbsp;&nbsp;&nbsp;public HashMap getAttributes() {<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return null;<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br />&nbsp;&nbsp;&nbsp;&nbsp;public void setAttributes() {<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br />&nbsp;&nbsp;&nbsp;&nbsp;protected void execute() {<br />&nbsp;&nbsp;&nbsp;&nbsp;}<br />}</div>\r\n<p>2) Написати XML файл для опису завдання. Назвіть його, наприклад, TestReconTask.xml:</p><div class="code">&lt;?xml version=<span class="lapky">"1.0"</span> encoding=<span class="lapky">"windows-1251"</span> ?&gt;<br />&lt;scheduledTasks xmlns=<span class="lapky">"http://xmlns.oracle.com"</span>&gt;<br />&nbsp;&nbsp;&lt;task xmlns=<span class="lapky">"http://xmlns.oracle.com"</span>&gt;<br />&#09&#09&lt;name&gt;TestReconTask&lt;/name&gt;<br />&#09&#09&lt;class&gt;mysystemrecon.TestReconTask&lt;/class&gt;<br />&#09&#09&lt;description&gt;TestReconTask&lt;/description&gt;<br />&#09&#09&lt;retry&gt;5&lt;/retry&gt;<br />&#09&#09&lt;parameters&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;string-param required=<span class="lapky">"true"</span> encrypted=<span class="lapky">"false"</span> helpText=<span class="lapky">"ITResource"</span>&gt;ITResource&lt;/string-param&gt;<br />&nbsp;&nbsp;&nbsp;&nbsp;&lt;/parameters&gt;<br />&#09&lt;/task&gt;<br />&lt;/scheduledTasks&gt;</div><p>3) Зареєструвати цей файл в MDS. Для цього спочатку потрібно правильно встановити змінну OIM_ORACLE_HOME:<div class="code">$ export OIM_ORACLE_HOME=/opt/weblogic/Oracle_IDM1</div><p>4) Перейти в каталог $OIM_ORACLE_HOME/server/bin, знайти файл weblogic.properties і встановити змінну metadata_from_loc таким чином, щоб це був шлях до /db/TestReconTask.xml (так, цей файл обов''язково має бути в каталозі /db);</p><p>5) Виконати скрипт weblogicImportMetadata.sh для реєстрації в MDS. При цьому потрібно буде ввести параметри підключення до серверу weblogic.</p><p>6) Закинути jar-файл із класом проекту в каталог $OIM_ORACLE_HOME/server/JavaTasks.</p><p>Після цього завдання можна ставити завдання через веб-пику OIMа (Advanced -> System Management -> Scheduler).</p>', 'Завдання за розкладом в OIM 11g', 'oim'),
(1354738107, '<p>Для того, щоб призначити дійсно глобальні клавіатурні скорочення в Лінукс — так щоб працювали незалежно від того в віконному середовищі ви чи в чистій консолі, залогінені чи ні, можна використовувати таку програмку як actkbd. Вона є в портежах Дженти.</p><p>Як у себе налаштував так. Створив конфігураційний файл /etc/actkbd.conf з наступним вмістом:</p><div class="code">166:key::vbetool dpms off<br />164:key::vbetool dpms on</div><p>Зробив скрипт /etc/init.d/actkbd для автозапуску цього демона:</p><div class="code">#!/sbin/runscript<br />#Run key binding via the actkbd.<br /><br />start() {<br />&#09ebegin <span class="lapky">"Запуск демона клавіатурних скорочень actkbd..."</span><br />&#09actkbd -D -d /dev/input/event3<br />&#09eend $?<br />}</div><p>Зрозуміло, що зробив його виконуваним і додав до списку автозавантаження.</p><p>Тепер у мене при натискані мультимедійної кнопки "Стоп" гасне монітор, а вмикається лише натисканням мультимедійної клавіші "Програвати/Пауза".</p>', 'Глобальні ', 'linux');

-- --------------------------------------------------------

--
-- Table structure for table `tryloginminute`
--

DROP TABLE IF EXISTS `tryloginminute`;
CREATE TABLE IF NOT EXISTS `tryloginminute` (
  `ip` varchar(15) NOT NULL,
  `lastminute` int(11) DEFAULT NULL,
  `sprob` int(2) DEFAULT NULL,
  PRIMARY KEY (`ip`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8;

--
-- Dumping data for table `tryloginminute`
--

INSERT INTO `tryloginminute` (`ip`, `lastminute`, `sprob`) VALUES
('95.158.48.141', 1337066778, 2);

-- --------------------------------------------------------

--
-- Table structure for table `users`
--

DROP TABLE IF EXISTS `users`;
CREATE TABLE IF NOT EXISTS `users` (
  `login` varchar(32) NOT NULL,
  `pass` varchar(32) DEFAULT NULL,
  `hash` varchar(32) DEFAULT NULL,
  `ugroup` varchar(32) DEFAULT NULL,
  `email` varchar(64) DEFAULT NULL,
  PRIMARY KEY (`login`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8;

--
-- Dumping data for table `users`
--

INSERT INTO `users` (`login`, `pass`, `hash`, `ugroup`, `email`) VALUES
('b', 'ad', 'no', 'admin', 'admin@localhost');

/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
